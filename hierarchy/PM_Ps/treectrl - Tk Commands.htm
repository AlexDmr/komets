<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0047)http://tktreectrl.sourceforge.net/treectrl.html -->
<! -- Copyright (c) 2002-2003 Christian Krone.   --    --   See the file &quot;license.terms&quot; for information on usage and redistribution   --   of this file, and for a DISCLAIMER OF ALL WARRANTIES.   --    --   $Id: treectrl.html,v 1.30 2005/07/23 00:35:20 treectrl Exp $
   --><HTML><HEAD><TITLE>treectrl - Tk Commands</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252"><! -- Generated from file 'doc/treectrl.man' by tcllib/doctools with format 'html'
   --><! -- CVS: $Id: treectrl.html,v 1.30 2005/07/23 00:35:20 treectrl Exp $ treectrl.n
   -->
<META content="MSHTML 6.00.2900.2873" name=GENERATOR></HEAD>
<BODY>
<H1>treectrl(n) 2.1 treectrl "Tk Commands"</H1>
<H2><A name=name>NAME</A></H2>
<P>
<P>treectrl - Create and manipulate hierarchical multicolumn widgets 
<H2><A name=table_of_contents>TABLE OF CONTENTS</A></H2>
<P>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#table_of_contents">TABLE 
OF CONTENTS</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#synopsis">SYNOPSIS</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#description">DESCRIPTION</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#standard_options">STANDARD 
OPTIONS</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#widget_specific_options">WIDGET 
SPECIFIC OPTIONS</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#widget_command">WIDGET 
COMMAND</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#columns">COLUMNS</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#column_description">COLUMN 
DESCRIPTION</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#states">STATES</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">PER-STATE 
OPTIONS</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#elements">ELEMENTS</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#bitmap_element">BITMAP 
ELEMENT</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#border_element">BORDER 
ELEMENT</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#image_element">IMAGE 
ELEMENT</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#rectangle_element">RECTANGLE 
ELEMENT</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#text_element">TEXT 
ELEMENT</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#window_element">WINDOW 
ELEMENT</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#item_description">ITEM 
DESCRIPTION</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#events_and_script_substitutions">EVENTS 
AND SCRIPT SUBSTITUTIONS</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#dynamic_events">DYNAMIC 
EVENTS</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#default_bindings">DEFAULT 
BINDINGS</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#examples">EXAMPLES</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#see_also">SEE 
ALSO</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://tktreectrl.sourceforge.net/treectrl.html#keywords">KEYWORDS</A><BR>
<H2><A name=synopsis>SYNOPSIS</A></H2>
<P>package require <B>treectrl 2.1</B><BR><BR>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=1>
  <TBODY>
  <TR bgColor=lightyellow>
    <TD bgColor=lightyellow>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" 0>
        <TBODY>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#1"><B 
            class=cmd>treectrl</B> <I class=arg>pathName</I> ?<I 
            class=arg>options</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#2"><I 
            class=arg>pathName</I> <B class=cmd>activate</B> <I 
            class=arg>itemDesc</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#3"><I 
            class=arg>pathName</I> <B class=cmd>canvasx</B> <I 
            class=arg>screenx</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#4"><I 
            class=arg>pathName</I> <B class=cmd>canvasy</B> <I 
            class=arg>screeny</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#5"><I 
            class=arg>pathName</I> <B class=cmd>cget</B> <I 
            class=arg>option</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#6"><I 
            class=arg>pathName</I> <B class=cmd>collapse</B> 
            ?<STRONG>-recurse</STRONG>? ?<I class=arg>itemDesc 
...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#7"><I 
            class=arg>pathName</I> <B class=cmd>column</B> <I 
            class=arg>option</I> <I class=arg>column</I> ?<I class=arg>arg 
            ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#8"><I 
            class=arg>pathName</I> <B class=cmd>column bbox</B> <I 
            class=arg>column</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#9"><I 
            class=arg>pathName</I> <B class=cmd>column cget</B> <I 
            class=arg>column</I> <I class=arg>option</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#10"><I 
            class=arg>pathName</I> <B class=cmd>column configure</B> <I 
            class=arg>column</I> ?<I class=arg>option</I>? ?<I 
            class=arg>value</I>? ?<I class=arg>option value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#11"><I 
            class=arg>pathName</I> <B class=cmd>column compare</B> <I 
            class=arg>column1</I> <I class=arg>op</I> <I 
            class=arg>column2</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#12"><I 
            class=arg>pathName</I> <B class=cmd>column count</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#13"><I 
            class=arg>pathName</I> <B class=cmd>column create</B> ?<I 
            class=arg>option value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#14"><I 
            class=arg>pathName</I> <B class=cmd>column delete</B> <I 
            class=arg>column</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#15"><I 
            class=arg>pathName</I> <B class=cmd>column dragcget</B> <I 
            class=arg>option</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#16"><I 
            class=arg>pathName</I> <B class=cmd>column dragconfigure</B> ?<I 
            class=arg>option</I>? ?<I class=arg>value</I>? ?<I class=arg>option 
            value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#17"><I 
            class=arg>pathName</I> <B class=cmd>column index</B> <I 
            class=arg>column</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#18"><I 
            class=arg>pathName</I> <B class=cmd>column id</B> <I 
            class=arg>column</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#19"><I 
            class=arg>pathName</I> <B class=cmd>column list</B> ?<I 
            class=arg>-visible</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#20"><I 
            class=arg>pathName</I> <B class=cmd>column move</B> <I 
            class=arg>column</I> <I class=arg>before</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#21"><I 
            class=arg>pathName</I> <B class=cmd>column neededwidth</B> <I 
            class=arg>column</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#22"><I 
            class=arg>pathName</I> <B class=cmd>column order</B> <I 
            class=arg>column</I> ?<I class=arg>-visible</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#23"><I 
            class=arg>pathName</I> <B class=cmd>column width</B> <I 
            class=arg>column</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#24"><I 
            class=arg>pathName</I> <B class=cmd>compare</B> <I 
            class=arg>itemDesc1</I> <I class=arg>op</I> <I 
            class=arg>itemDesc2</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#25"><I 
            class=arg>pathName</I> <B class=cmd>configure</B> ?<I 
            class=arg>option</I>? ?<I class=arg>value option value 
          ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#26"><I 
            class=arg>pathName</I> <B class=cmd>contentbox</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#27"><I 
            class=arg>pathName</I> <B class=cmd>debug</B> <I 
            class=arg>option</I> ?<I class=arg>arg arg ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#28"><I 
            class=arg>pathName</I> <B class=cmd>debug cget</B> <I 
            class=arg>element</I> <I class=arg>option</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#29"><I 
            class=arg>pathName</I> <B class=cmd>debug configure</B> <I 
            class=arg>element</I> ?<I class=arg>option</I>? ?<I 
            class=arg>value</I>? ?<I class=arg>option value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#30"><I 
            class=arg>pathName</I> <B class=cmd>debug dinfo</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#31"><I 
            class=arg>pathName</I> <B class=cmd>debug scroll</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#32"><I 
            class=arg>pathName</I> <B class=cmd>depth</B> ?<I 
            class=arg>itemDesc</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#33"><I 
            class=arg>pathName</I> <B class=cmd>dragimage</B> <I 
            class=arg>option</I> ?<I class=arg>arg ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#34"><I 
            class=arg>pathName</I> <B class=cmd>dragimage add</B> <I 
            class=arg>itemDesc</I> ?<I class=arg>column</I>? ?<I 
            class=arg>element</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#35"><I 
            class=arg>pathName</I> <B class=cmd>dragimage cget</B> <I 
            class=arg>option</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#36"><I 
            class=arg>pathName</I> <B class=cmd>dragimage clear</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#37"><I 
            class=arg>pathName</I> <B class=cmd>dragimage configure</B> ?<I 
            class=arg>option</I>? ?<I class=arg>value</I>? ?<I class=arg>option 
            value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#38"><I 
            class=arg>pathName</I> <B class=cmd>dragimage offset</B> ?<I 
            class=arg>x y</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#39"><I 
            class=arg>pathName</I> <B class=cmd>element</B> <I 
            class=arg>option</I> ?<I class=arg>element</I>? ?<I class=arg>arg 
            arg ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#40"><I 
            class=arg>pathName</I> <B class=cmd>element cget</B> <I 
            class=arg>element</I> <I class=arg>option</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#41"><I 
            class=arg>pathName</I> <B class=cmd>element configure</B> <I 
            class=arg>element</I> ?<I class=arg>option</I>? ?<I 
            class=arg>value</I>? ?<I class=arg>option value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#42"><I 
            class=arg>pathName</I> <B class=cmd>element create</B> <I 
            class=arg>element</I> <I class=arg>type</I> ?<I class=arg>option 
            value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#43"><I 
            class=arg>pathName</I> <B class=cmd>element delete</B> ?<I 
            class=arg>element ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#44"><I 
            class=arg>pathName</I> <B class=cmd>element names</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#45"><I 
            class=arg>pathName</I> <B class=cmd>element perstate</B> <I 
            class=arg>element</I> <I class=arg>option</I> <I 
            class=arg>stateList</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#46"><I 
            class=arg>pathName</I> <B class=cmd>element type</B> <I 
            class=arg>element</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#47"><I 
            class=arg>pathName</I> <B class=cmd>expand</B> 
            ?<STRONG>-recurse</STRONG>? ?<I class=arg>itemDesc 
...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#48"><I 
            class=arg>pathName</I> <B class=cmd>identify</B> <I class=arg>x</I> 
            <I class=arg>y</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#49"><I 
            class=arg>pathName</I> <B class=cmd>index</B> <I 
            class=arg>itemDesc</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#50"><I 
            class=arg>pathName</I> <B class=cmd>item</B> <I class=arg>option</I> 
            ?<I class=arg>arg ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#51"><I 
            class=arg>pathName</I> <B class=cmd>item ancestors</B> <I 
            class=arg>itemDesc</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#52"><I 
            class=arg>pathName</I> <B class=cmd>item bbox</B> <I 
            class=arg>itemDesc</I> ?<I class=arg>column</I>? ?<I 
            class=arg>element</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#53"><I 
            class=arg>pathName</I> <B class=cmd>item cget</B> <I 
            class=arg>itemDesc</I> <I class=arg>option</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#54"><I 
            class=arg>pathName</I> <B class=cmd>item children</B> <I 
            class=arg>itemDesc</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#55"><I 
            class=arg>pathName</I> <B class=cmd>item collapse</B> <I 
            class=arg>itemDesc</I> ?<STRONG>-recurse</STRONG>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#56"><I 
            class=arg>pathName</I> <B class=cmd>item compare</B> <I 
            class=arg>itemDesc1</I> <I class=arg>op</I> <I 
            class=arg>itemDesc2</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#57"><I 
            class=arg>pathName</I> <B class=cmd>item complex</B> <I 
            class=arg>itemDesc</I> ?<I class=arg>list...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#58"><I 
            class=arg>pathName</I> <B class=cmd>item configure</B> <I 
            class=arg>itemDesc</I> ?<I class=arg>option</I>? ?<I 
            class=arg>value</I>? ?<I class=arg>option value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#59"><I 
            class=arg>pathName</I> <B class=cmd>item count</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#60"><I 
            class=arg>pathName</I> <B class=cmd>item create</B> ?<I 
            class=arg>option value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#61"><I 
            class=arg>pathName</I> <B class=cmd>item delete</B> <I 
            class=arg>first</I> ?<I class=arg>last</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#62"><I 
            class=arg>pathName</I> <B class=cmd>item dump</B> <I 
            class=arg>itemDesc</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#63"><I 
            class=arg>pathName</I> <B class=cmd>item element</B> <I 
            class=arg>command</I> <I class=arg>itemDesc</I> <I 
            class=arg>column</I> <I class=arg>element</I> ?<I class=arg>arg 
            ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#64"><I 
            class=arg>pathName</I> <B class=cmd>item element actual</B> <I 
            class=arg>itemDesc</I> <I class=arg>column</I> <I 
            class=arg>element</I> <I class=arg>option</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#65"><I 
            class=arg>pathName</I> <B class=cmd>item element cget</B> <I 
            class=arg>itemDesc</I> <I class=arg>column</I> <I 
            class=arg>element</I> <I class=arg>option</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#66"><I 
            class=arg>pathName</I> <B class=cmd>item element configure</B> <I 
            class=arg>itemDesc</I> <I class=arg>column</I> <I 
            class=arg>element</I> ?<I class=arg>option</I>? ?<I 
            class=arg>value</I>? ?<I class=arg>option value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#67"><I 
            class=arg>pathName</I> <B class=cmd>item element perstate</B> <I 
            class=arg>itemDesc</I> <I class=arg>column</I> <I 
            class=arg>element</I> <I class=arg>option</I> ?<I 
            class=arg>stateList</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#68"><I 
            class=arg>pathName</I> <B class=cmd>item expand</B> <I 
            class=arg>itemDesc</I> ?<STRONG>-recurse</STRONG>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#69"><I 
            class=arg>pathName</I> <B class=cmd>item firstchild</B> <I 
            class=arg>parent</I> ?<I class=arg>child</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#70"><I 
            class=arg>pathName</I> <B class=cmd>item id</B> <I 
            class=arg>itemDesc</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#71"><I 
            class=arg>pathName</I> <B class=cmd>item image</B> <I 
            class=arg>itemDesc</I> ?<I class=arg>column</I>? ?<I 
            class=arg>image</I>? ?<I class=arg>column image ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#72"><I 
            class=arg>pathName</I> <B class=cmd>item isancestor</B> <I 
            class=arg>itemDesc</I> <I class=arg>descendant</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#73"><I 
            class=arg>pathName</I> <B class=cmd>item isopen</B> <I 
            class=arg>itemDesc</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#74"><I 
            class=arg>pathName</I> <B class=cmd>item lastchild</B> <I 
            class=arg>parent</I> ?<I class=arg>child</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#75"><I 
            class=arg>pathName</I> <B class=cmd>item nextsibling</B> <I 
            class=arg>sibling</I> ?<I class=arg>next</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#76"><I 
            class=arg>pathName</I> <B class=cmd>item numchildren</B> <I 
            class=arg>itemDesc</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#77"><I 
            class=arg>pathName</I> <B class=cmd>item order</B> <I 
            class=arg>itemDesc</I> ?<I class=arg>-visible</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#78"><I 
            class=arg>pathName</I> <B class=cmd>item parent</B> <I 
            class=arg>itemDesc</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#79"><I 
            class=arg>pathName</I> <B class=cmd>item prevsibling</B> <I 
            class=arg>sibling</I> ?<I class=arg>prev</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#80"><I 
            class=arg>pathName</I> <B class=cmd>item range</B> <I 
            class=arg>first</I> <I class=arg>last</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#81"><I 
            class=arg>pathName</I> <B class=cmd>item remove</B> <I 
            class=arg>itemDesc</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#82"><I 
            class=arg>pathName</I> <B class=cmd>item rnc</B> <I 
            class=arg>itemDesc</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#83"><I 
            class=arg>pathName</I> <B class=cmd>item sort</B> <I 
            class=arg>itemDesc</I> ?<I class=arg>option ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#84"><I 
            class=arg>pathName</I> <B class=cmd>item span</B> <I 
            class=arg>itemDesc</I> ?<I class=arg>column</I>? ?<I 
            class=arg>numColumns</I>? ?<I class=arg>column numColumns 
            ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#85"><I 
            class=arg>pathName</I> <B class=cmd>item state</B> <I 
            class=arg>command</I> <I class=arg>itemDesc</I> ?<I class=arg>arg 
            ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#86"><I 
            class=arg>pathName</I> <B class=cmd>item state forcolumn</B> <I 
            class=arg>itemDesc</I> <I class=arg>column</I> ?<I 
            class=arg>stateDescList</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#87"><I 
            class=arg>pathName</I> <B class=cmd>item state get</B> <I 
            class=arg>itemDesc</I> ?<I class=arg>stateName</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#88"><I 
            class=arg>pathName</I> <B class=cmd>item state set</B> <I 
            class=arg>itemDesc</I> ?<I class=arg>lastItem</I>? <I 
            class=arg>stateDescList</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#89"><I 
            class=arg>pathName</I> <B class=cmd>item style</B> <I 
            class=arg>command</I> <I class=arg>itemDesc</I> ?<I class=arg>arg 
            ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#90"><I 
            class=arg>pathName</I> <B class=cmd>item style elements</B> <I 
            class=arg>itemDesc</I> <I class=arg>column</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#91"><I 
            class=arg>pathName</I> <B class=cmd>item style map</B> <I 
            class=arg>itemDesc</I> <I class=arg>column</I> <I 
            class=arg>style</I> <I class=arg>map</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#92"><I 
            class=arg>pathName</I> <B class=cmd>item style set</B> <I 
            class=arg>itemDesc</I> ?<I class=arg>column</I>? ?<I 
            class=arg>style</I>? ?<I class=arg>column style ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#93"><I 
            class=arg>pathName</I> <B class=cmd>item text</B> <I 
            class=arg>itemDesc</I> ?<I class=arg>column</I>? ?<I 
            class=arg>text</I>? ?<I class=arg>column text ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#94"><I 
            class=arg>pathName</I> <B class=cmd>item toggle</B> <I 
            class=arg>itemDesc</I> ?<STRONG>-recurse</STRONG>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#95"><I 
            class=arg>pathName</I> <B class=cmd>marquee</B> <I 
            class=arg>option</I> ?<I class=arg>arg ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#96"><I 
            class=arg>pathName</I> <B class=cmd>marquee anchor</B> ?<I 
            class=arg>x y</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#97"><I 
            class=arg>pathName</I> <B class=cmd>marquee cget</B> <I 
            class=arg>option</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#98"><I 
            class=arg>pathName</I> <B class=cmd>marquee configure</B> ?<I 
            class=arg>option</I>? ?<I class=arg>value</I>? ?<I class=arg>option 
            value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#99"><I 
            class=arg>pathName</I> <B class=cmd>marquee coords</B> ?<I 
            class=arg>x1 y1 x2 y2</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#100"><I 
            class=arg>pathName</I> <B class=cmd>marquee corner</B> ?<I 
            class=arg>x y</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#101"><I 
            class=arg>pathName</I> <B class=cmd>marquee identify</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#102"><I 
            class=arg>pathName</I> <B class=cmd>notify</B> <I 
            class=arg>option</I> ?<I class=arg>arg ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#103"><I 
            class=arg>pathName</I> <B class=cmd>notify bind</B> ?<I 
            class=arg>object</I>? ?<I class=arg>pattern</I>? ?+??<I 
            class=arg>script</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#104"><I 
            class=arg>pathName</I> <B class=cmd>notify configure</B> <I 
            class=arg>object</I> <I class=arg>pattern</I> ?<I 
            class=arg>option</I>? ?<I class=arg>value</I>? ?<I class=arg>option 
            value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#105"><I 
            class=arg>pathName</I> <B class=cmd>notify detailnames</B> <I 
            class=arg>eventName</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#106"><I 
            class=arg>pathName</I> <B class=cmd>notify eventnames</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#107"><I 
            class=arg>pathName</I> <B class=cmd>notify generate</B> <I 
            class=arg>pattern</I> ?<I class=arg>charMap</I>? ?<I 
            class=arg>percentsCommand</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#108"><I 
            class=arg>pathName</I> <B class=cmd>notify install</B> <I 
            class=arg>pattern</I> ?<I class=arg>percentsCommand</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#109"><I 
            class=arg>pathName</I> <B class=cmd>notify install detail</B> <I 
            class=arg>eventName</I> <I class=arg>detail</I> ?<I 
            class=arg>percentsCommand</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#110"><I 
            class=arg>pathName</I> <B class=cmd>notify install event</B> <I 
            class=arg>eventName</I> ?<I class=arg>percentsCommand</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#111"><I 
            class=arg>pathName</I> <B class=cmd>notify linkage</B> <I 
            class=arg>pattern</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#112"><I 
            class=arg>pathName</I> <B class=cmd>notify linkage</B> <I 
            class=arg>eventName</I> ?<I class=arg>detail</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#113"><I 
            class=arg>pathName</I> <B class=cmd>notify unbind</B> <I 
            class=arg>object</I> ?<I class=arg>pattern</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#114"><I 
            class=arg>pathName</I> <B class=cmd>notify uninstall</B> <I 
            class=arg>pattern</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#115"><I 
            class=arg>pathName</I> <B class=cmd>notify uninstall detail</B> <I 
            class=arg>eventName</I> <I class=arg>detail</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#116"><I 
            class=arg>pathName</I> <B class=cmd>notify uninstall event</B> <I 
            class=arg>eventName</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#117"><I 
            class=arg>pathName</I> <B class=cmd>numcolumns</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#118"><I 
            class=arg>pathName</I> <B class=cmd>numitems</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#119"><I 
            class=arg>pathName</I> <B class=cmd>orphans</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#120"><I 
            class=arg>pathName</I> <B class=cmd>range</B> <I class=arg>first</I> 
            <I class=arg>last</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#121"><I 
            class=arg>pathName</I> <B class=cmd>state</B> <I 
            class=arg>option</I> ?<I class=arg>stateName</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#122"><I 
            class=arg>pathName</I> <B class=cmd>state define</B> <I 
            class=arg>stateName</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#123"><I 
            class=arg>pathName</I> <B class=cmd>state linkage</B> <I 
            class=arg>stateName</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#124"><I 
            class=arg>pathName</I> <B class=cmd>state names</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#125"><I 
            class=arg>pathName</I> <B class=cmd>state undefine</B> ?<I 
            class=arg>stateName ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#126"><I 
            class=arg>pathName</I> <B class=cmd>see</B> <I 
            class=arg>itemDesc</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#127"><I 
            class=arg>pathName</I> <B class=cmd>selection</B> <I 
            class=arg>option</I> <I class=arg>arg</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#128"><I 
            class=arg>pathName</I> <B class=cmd>selection add</B> <I 
            class=arg>first</I> ?<I class=arg>last</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#129"><I 
            class=arg>pathName</I> <B class=cmd>selection anchor</B> ?<I 
            class=arg>itemDesc</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#130"><I 
            class=arg>pathName</I> <B class=cmd>selection clear</B> ?<I 
            class=arg>first</I>? ?<I class=arg>last</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#131"><I 
            class=arg>pathName</I> <B class=cmd>selection count</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#132"><I 
            class=arg>pathName</I> <B class=cmd>selection get</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#133"><I 
            class=arg>pathName</I> <B class=cmd>selection includes</B> <I 
            class=arg>itemDesc</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#134"><I 
            class=arg>pathName</I> <B class=cmd>selection modify</B> <I 
            class=arg>select</I> <I class=arg>deselect</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#135"><I 
            class=arg>pathName</I> <B class=cmd>style</B> <I 
            class=arg>option</I> ?<I class=arg>element</I>? ?<I class=arg>arg 
            arg ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#136"><I 
            class=arg>pathName</I> <B class=cmd>style cget</B> <I 
            class=arg>style</I> <I class=arg>option</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#137"><I 
            class=arg>pathName</I> <B class=cmd>style configure</B> <I 
            class=arg>style</I> ?<I class=arg>option</I>? ?<I 
            class=arg>value</I>? ?<I class=arg>option value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#138"><I 
            class=arg>pathName</I> <B class=cmd>style create</B> <I 
            class=arg>style</I> ?<I class=arg>option value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#139"><I 
            class=arg>pathName</I> <B class=cmd>style delete</B> ?<I 
            class=arg>style ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#140"><I 
            class=arg>pathName</I> <B class=cmd>style elements</B> <I 
            class=arg>style</I> ?<I class=arg>elementList</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#141"><I 
            class=arg>pathName</I> <B class=cmd>style layout</B> <I 
            class=arg>style</I> <I class=arg>element</I> ?<I 
            class=arg>option</I>? ?<I class=arg>value</I>? ?<I class=arg>option 
            value ...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#142"><I 
            class=arg>pathName</I> <B class=cmd>style names</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#143"><I 
            class=arg>pathName</I> <B class=cmd>toggle</B> 
            ?<STRONG>-recurse</STRONG>? ?<I class=arg>itemDesc 
...</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#144"><I 
            class=arg>pathName</I> <B class=cmd>xview</B> ?<I 
            class=arg>args</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#145"><I 
            class=arg>pathName</I> <B class=cmd>xview</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#146"><I 
            class=arg>pathName</I> <B class=cmd>xview moveto</B> <I 
            class=arg>fraction</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#147"><I 
            class=arg>pathName</I> <B class=cmd>xview scroll</B> <I 
            class=arg>number</I> <I class=arg>what</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#148"><I 
            class=arg>pathName</I> <B class=cmd>yview</B> ?<I 
            class=arg>args</I>?</A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#149"><I 
            class=arg>pathName</I> <B class=cmd>yview</B></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#150"><I 
            class=arg>pathName</I> <B class=cmd>yview moveto</B> <I 
            class=arg>fraction</I></A></TD></TR>
        <TR vAlign=top>
          <TD><A href="http://tktreectrl.sourceforge.net/treectrl.html#151"><I 
            class=arg>pathName</I> <B class=cmd>yview scroll</B> <I 
            class=arg>number</I> <I 
  class=arg>what</I></A></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
<H2><A name=description>DESCRIPTION</A></H2>
<P>
<DL>
  <DT><A name=1><B class=cmd>treectrl</B> <I class=arg>pathName</I> ?<I 
  class=arg>options</I>?</A>
  <DD></DD></DL>
<P>The <B class=cmd>treectrl</B> command creates a new window (given by the <I 
class=arg>pathName</I> argument) and makes it into a treectrl widget. Additional 
options, described above, may be specified on the command line or in the option 
database to configure aspects of the treectrl such as its background color and 
relief. The <B class=cmd>treectrl</B> command returns the path name of the new 
window. At the time this command is invoked, there must not exist a window named 
<I class=arg>pathName</I>, but <I class=arg>pathName</I>'s parent must exist. 
<P>A treectrl is a widget which displays items in a one- or two-dimensional 
arrangement. Items have a parent-child relationship with other items. Items have 
a set of states, which are boolean properties. Items may be spread about one or 
more columns. For each column of an item there is a style associated, which 
determines how to display the item's column taking into account the item's 
current state set. One column can be defined to display the data in a 
hierarchical structure. 
<P>Normally the origin of the coordinate system is at the upper-left corner of 
the window containing the treectrl. It is possible to adjust the origin of the 
coordinate system relative to the origin of the window using the <B 
class=cmd>xview</B> and <B class=cmd>yview</B> widget commands; this is 
typically used for scrolling. 
<P>A treectrl widget can be horizontal or vertical oriented like many other Tk 
widgets. For displaying hierarchical data only vertical orientation is useful, 
since only then the children of an item are displayed directly below their 
parent. If the treectrl widget is used only to display data in a multicolumn 
listbox, the specification of an orientation will give useful results. 
<H2><A name=standard_options>STANDARD OPTIONS</A></H2>
<P>
<DL>
  <DT><STRONG><STRONG>-background</STRONG></STRONG>
  <DD>
  <DT><STRONG><STRONG>-borderwidth</STRONG></STRONG>
  <DD>
  <DT><STRONG><STRONG>-cursor</STRONG></STRONG>
  <DD>
  <DT><STRONG><STRONG>-font</STRONG></STRONG>
  <DD>
  <DT><STRONG><STRONG>-highlightbackground</STRONG></STRONG>
  <DD>
  <DT><STRONG><STRONG>-highlightcolor</STRONG></STRONG>
  <DD>
  <DT><STRONG><STRONG>-highlightthickness</STRONG></STRONG>
  <DD>
  <DT><STRONG><STRONG>-orient</STRONG></STRONG>
  <DD>
  <DT><STRONG><STRONG>-relief</STRONG></STRONG>
  <DD>
  <DT><STRONG><STRONG>-takefocus</STRONG></STRONG>
  <DD>
  <DT><STRONG><STRONG>-xscrollcommand</STRONG></STRONG>
  <DD>
  <DT><STRONG><STRONG>-yscrollcommand</STRONG></STRONG>
  <DD>
  <DT><STRONG><STRONG>-foreground</STRONG></STRONG>
  <DD></DD></DL>See the <B class=cmd>option</B> manual entry for details on the 
standard options. 
<H2><A name=widget_specific_options>WIDGET SPECIFIC OPTIONS</A></H2>
<P>
<DL>
  <DT>Command-Line Switch: <STRONG>-backgroundimage</STRONG><BR>Database Name: 
  <STRONG>backgroundImage</STRONG><BR>Database Class: 
  <STRONG>BackgroundImage</STRONG><BR>
  <DD>Specifies the name of an image to draw as the list background. The image 
  is tiled horizontally and vertically to fill the content area of the list. If 
  the image is transparent it is drawn on top of the background color(s). 
  <BR><BR>
  <DT>Command-Line Switch: <STRONG>-backgroundmode</STRONG><BR>Database Name: 
  <STRONG>backgroundMode</STRONG><BR>Database Class: 
  <STRONG>BackgroundMode</STRONG><BR>
  <DD>Specifies how the background color of items is chosen in each column. The 
  value should be one of <STRONG>row</STRONG>, <STRONG>column</STRONG>, 
  <STRONG>order</STRONG>, or <STRONG>ordervisible</STRONG>. The default is 
  <STRONG>row</STRONG>. This option has only an effect for columns which have 
  <STRONG>-itembackground</STRONG> defined as list of two or more colors (see 
  section <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#columns">COLUMNS</A> 
  below for more on this). If <STRONG>row</STRONG> or <STRONG>column</STRONG> is 
  specified, the background color is chosen based on the location of the item in 
  the 1- or 2-dimensional grid of items as layed out on the screen; this layout 
  of items is affected by the <STRONG>-orient</STRONG> and 
  <STRONG>-wrap</STRONG> options as well as item visibility. When 
  <STRONG>order</STRONG> or <STRONG>ordervisible</STRONG> is specified, the 
  background color is chosen based on the result of the <B class=cmd>item 
  order</B> command, regardless of the layout of items. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-buttonbitmap</STRONG><BR>Database Name: 
  <STRONG>buttonBitmap</STRONG><BR>Database Class: 
  <STRONG>ButtonBitmap</STRONG><BR>
  <DD>Specifies the bitmap to be used as the expand/collapse button to the left 
  of an item. This is a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option. If a bitmap is specified for a certain item state, it overrides the 
  effects of -usetheme. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-buttoncolor</STRONG><BR>Database Name: 
  <STRONG>buttonColor</STRONG><BR>Database Class: 
  <STRONG>ButtonColor</STRONG><BR>
  <DD>Specifies the foreground color which should be used for drawing the 
  outline and the plus or minus sign of the button to the left of an item. 
  <BR><BR>
  <DT>Command-Line Switch: <STRONG>-buttonimage</STRONG><BR>Database Name: 
  <STRONG>buttonImage</STRONG><BR>Database Class: 
  <STRONG>ButtonImage</STRONG><BR>
  <DD>Specifies the image to be used as the expand/collapse button to the left 
  of an item. This is a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option. If an image is specified for a certain item state, it overrides the 
  effects of -buttonbitmap and -usetheme. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-buttonsize</STRONG><BR>Database Name: 
  <STRONG>buttonSize</STRONG><BR>Database Class: <STRONG>ButtonSize</STRONG><BR>
  <DD>Specifies the width and height of the button drawn to the left of an item 
  in any of the forms acceptable to <STRONG>Tk_GetPixels</STRONG>. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-buttonthickness</STRONG><BR>Database Name: 
  <STRONG>buttonThickness</STRONG><BR>Database Class: 
  <STRONG>ButtonThickness</STRONG><BR>
  <DD>Specifies the width of the outline and the plus or minus sign of the 
  button to the left of an item in any of the forms acceptable to 
  <STRONG>Tk_GetPixels</STRONG>. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-columnprefix</STRONG><BR>Database Name: 
  <STRONG>columnPrefix</STRONG><BR>Database Class: 
  <STRONG>ColumnPrefix</STRONG><BR>
  <DD>Specifies an ascii string that changes the way column ids are reported and 
  processed. If this option is a non-empty string, the usual integer value of a 
  column id is prefixed with the given string. This can aid debugging but it is 
  important your code doesn't assume column ids are integers if you use it. 
  <BR><BR>
  <DT>Command-Line Switch: <STRONG>-columnproxy</STRONG><BR>Database Name: 
  <STRONG>columnProxy</STRONG><BR>Database Class: 
  <STRONG>ColumnProxy</STRONG><BR>
  <DD>If this option specifies a non empty value, it should be a screen distance 
  in any of the forms acceptable to <STRONG>Tk_GetPixels</STRONG>. Then a 1 
  pixel thick vertical line will be drawn at the specified screen distance from 
  the left edge of the treectrl widget, which reaches from top to bottom of the 
  treectrl widget and uses an inverting color (i.e black on lighter background, 
  white on darker background). This line can be used to give the user a visual 
  feedback during column resizing. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-columnresizemode</STRONG><BR>Database Name: 
  <STRONG>columnResizeMode</STRONG><BR>Database Class: 
  <STRONG>ColumnResizeMode</STRONG><BR>
  <DD>Specifies the visual feedback used when resizing columns. The value should 
  be one of <STRONG>proxy</STRONG> or <STRONG>realtime</STRONG>. For 
  <STRONG>proxy</STRONG>, a 1-pixel thick vertical line is drawn representing 
  where the right edge of the column will be after resizing. For 
  <STRONG>realtime</STRONG>, the column's size is changed while the user is 
  dragging the right edge of the column. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-defaultstyle</STRONG><BR>Database Name: 
  <STRONG>defaultStyle</STRONG><BR>Database Class: 
  <STRONG>DefaultStyle</STRONG><BR>
  <DD>Specifies a list of styles, one per column, to apply to each item created 
  by the <B class=cmd>item create</B> command. The number of styles in the list 
  can be different from the number of tree columns. Each list element should be 
  a valid style name or an empty string to indicate no style should be applied 
  to a specific column. The list of styles is updated if a style is deleted or 
  if a column is moved. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-doublebuffer</STRONG><BR>Database Name: 
  <STRONG>doubleBuffer</STRONG><BR>Database Class: 
  <STRONG>DoubleBuffer</STRONG><BR>
  <DD>Specifies if double-buffering should be used to improve displaying. The 
  value should be one of <STRONG>none</STRONG>, <STRONG>window</STRONG>, or 
  <STRONG>item</STRONG>. For <STRONG>none</STRONG> no double-buffering is used 
  at all, which may be most memory efficient, but will probably generate some 
  flickering on the screen. For <STRONG>window</STRONG> the complete tree is 
  double-buffered, which requires a buffer big enough to contain the complete 
  widget. For <STRONG>item</STRONG>, which is the default, every item is 
  separately double-buffered, so it works with a buffer size as big as the 
  biggest item. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-height</STRONG><BR>Database Name: 
  <STRONG>height</STRONG><BR>Database Class: <STRONG>Height</STRONG><BR>
  <DD>Specifies the desired height for the window in any of the forms acceptable 
  to <STRONG>Tk_GetPixels</STRONG>. The default is 200 pixels. If this option is 
  less than or equal to zero then the window will not request any size at all. 
  <BR><BR>
  <DT>Command-Line Switch: <STRONG>-indent</STRONG><BR>Database Name: 
  <STRONG>indent</STRONG><BR>Database Class: <STRONG>Indent</STRONG><BR>
  <DD>Specifies the amount of indentation in any of the forms acceptable to 
  <STRONG>Tk_GetPixels</STRONG>. The default is 19 pixel. Indentation is the 
  screen distance an item is displayed more to the right than its father. 
  <BR><BR>
  <DT>Command-Line Switch: <STRONG>-itemheight</STRONG><BR>Database Name: 
  <STRONG>itemHeight</STRONG><BR>Database Class: <STRONG>ItemHeight</STRONG><BR>
  <DD>Specifies a fixed height for every item in any of the forms acceptable to 
  <STRONG>Tk_GetPixels</STRONG>. If non-zero, this option overrides the 
  requested height of an item and the -minitemheight option. The default is 0, 
  which means that every item has the height requested by the arrangement of 
  elements in each column. Items are never shorter than the maximum height of a 
  button. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-itemprefix</STRONG><BR>Database Name: 
  <STRONG>itemPrefix</STRONG><BR>Database Class: <STRONG>ItemPrefix</STRONG><BR>
  <DD>Specifies an ascii string that changes the way item ids are reported and 
  processed. If this option is a non-empty string, the usual integer value of an 
  item id is prefixed with the given string. This can aid debugging but it is 
  important your code doesn't assume item ids are integers if you use it. 
  <BR><BR>
  <DT>Command-Line Switch: <STRONG>-itemwidth</STRONG><BR>Database Name: 
  <STRONG>itemWidth</STRONG><BR>Database Class: <STRONG>ItemWidth</STRONG><BR>
  <DD>Specifies a fixed width for every item in any of the forms acceptable to 
  <STRONG>Tk_GetPixels</STRONG>. If more than one column is visible, then this 
  option has no effect. If the -orient option is vertical, and the -wrap option 
  is unspecified, then this option has no effect (in that case all items are as 
  wide as the column). <BR><BR>
  <DT>Command-Line Switch: <STRONG>-itemwidthequal</STRONG><BR>Database Name: 
  <STRONG>itemWidthEqual</STRONG><BR>Database Class: 
  <STRONG>ItemWidthEqual</STRONG><BR>
  <DD>Specifies a boolean that says whether all items should have the same 
  width. If more than one column is visible, then this option has no effect. If 
  the -orient option is vertical, and the -wrap option is unspecified, then this 
  option has no effect (in that case all items are as wide as the column). If 
  the -itemwidth option is specified, then this option has no effect. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-itemwidthmultiple</STRONG><BR>Database Name: 
  <STRONG>itemWidthMultiple</STRONG><BR>Database Class: 
  <STRONG>ItemWidthMultiple</STRONG><BR>
  <DD>Specifies a screen distance that every item's width will be evenly 
  divisible by in any of the forms acceptable to <STRONG>Tk_GetPixels</STRONG>. 
  If more than one column is visible, then this option has no effect. If the 
  -orient option is vertical, and the -wrap option is unspecified, then this 
  option has no effect (in that case all items are as wide as the column). If 
  the -itemwidth option is specified, then this option has no effect. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-linecolor</STRONG><BR>Database Name: 
  <STRONG>lineColor</STRONG><BR>Database Class: <STRONG>LineColor</STRONG><BR>
  <DD>Specifies the color which should be used for drawing the connecting lines 
  between related items. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-linestyle</STRONG><BR>Database Name: 
  <STRONG>lineStyle</STRONG><BR>Database Class: <STRONG>LineStyle</STRONG><BR>
  <DD>Specifies the style of the connecting lines between related items, should 
  be <STRONG>dot</STRONG> which is the default, or <STRONG>solid</STRONG>. 
  <BR><BR>
  <DT>Command-Line Switch: <STRONG>-linethickness</STRONG><BR>Database Name: 
  <STRONG>lineThickness</STRONG><BR>Database Class: 
  <STRONG>LineThickness</STRONG><BR>
  <DD>Specifies the thickness of the connecting lines between related items in 
  any of the forms acceptable to <STRONG>Tk_GetPixels</STRONG>. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-minitemheight</STRONG><BR>Database Name: 
  <STRONG>minItemHeight</STRONG><BR>Database Class: 
  <STRONG>MinItemHeight</STRONG><BR>
  <DD>Specifies a minimum height for every item in any of the forms acceptable 
  to <STRONG>Tk_GetPixels</STRONG>. The default is 0, which means that every 
  item has the height requested by the arrangement of elements in each column. 
  This option has no effect if the -itemheight option is specified. Items are 
  never shorter than the maximum height of a button. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-scrollmargin</STRONG><BR>Database Name: 
  <STRONG>scrollMargin</STRONG><BR>Database Class: 
  <STRONG>ScrollMargin</STRONG><BR>
  <DD>The interpretation of this option is left to Tcl scripts that implement 
  scrolling: the widget implementation ignores this option entirely. Defaults to 
  0. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-selectmode</STRONG><BR>Database Name: 
  <STRONG>selectMode</STRONG><BR>Database Class: <STRONG>SelectMode</STRONG><BR>
  <DD>Specifies one of several styles for manipulating the selection. The value 
  of the option may be arbitrary, but the default bindings expect it to be 
  either <STRONG>single</STRONG>, <STRONG>browse</STRONG>, 
  <STRONG>multiple</STRONG>, or <STRONG>extended</STRONG>; the default value is 
  <STRONG>browse</STRONG>. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-showbuttons</STRONG><BR>Database Name: 
  <STRONG>showButtons</STRONG><BR>Database Class: 
  <STRONG>ShowButtons</STRONG><BR>
  <DD>Specifies a boolean value that determines whether this widget displays a 
  button to the left of any item. If the button is actually drawn can be 
  configured for every item with the <B class=cmd>item hasbutton</B> widget 
  command, but if this option is set to false, the configuration of an item has 
  no effect. The default value is true. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-showheader</STRONG><BR>Database Name: 
  <STRONG>showHeader</STRONG><BR>Database Class: <STRONG>ShowHeader</STRONG><BR>
  <DD>Specifies a boolean value that determines whether this widget should 
  display the header line with the column names at the top of the widget. The 
  default value is true. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-showlines</STRONG><BR>Database Name: 
  <STRONG>showLines</STRONG><BR>Database Class: <STRONG>ShowLines</STRONG><BR>
  <DD>Specifies a boolean value that determines whether this widget should draw 
  the connecting lines between related items. The default value is true. 
<BR><BR>
  <DT>Command-Line Switch: <STRONG>-showroot</STRONG><BR>Database Name: 
  <STRONG>showRoot</STRONG><BR>Database Class: <STRONG>ShowRoot</STRONG><BR>
  <DD>Specifies a boolean value that determines whether this widget should draw 
  the root item. By suppressing the drawing of the root item the widget can have 
  multiple items that appear as <EM>toplevel</EM> items. The default value is 
  true. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-showrootbutton</STRONG><BR>Database Name: 
  <STRONG>showRootButton</STRONG><BR>Database Class: 
  <STRONG>ShowRootButton</STRONG><BR>
  <DD>Specifies a boolean value that determines whether this widget should draw 
  a button before the root item. The default value is false. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-showrootlines</STRONG><BR>Database Name: 
  <STRONG>showRootLines</STRONG><BR>Database Class: 
  <STRONG>ShowRootLines</STRONG><BR>
  <DD>Specifies a boolean value that determines whether this widget should draw 
  the connecting lines between children of the root item. The default value is 
  true. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-treecolumn</STRONG><BR>Database Name: 
  <STRONG>treeColumn</STRONG><BR>Database Class: <STRONG>TreeColumn</STRONG><BR>
  <DD>Specifies a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#column_description">column 
  description</A> that determines which column displays the buttons and lines. 
  The default is unspecified. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-usetheme</STRONG><BR>Database Name: 
  <STRONG>useTheme</STRONG><BR>Database Class: <STRONG>UseTheme</STRONG><BR>
  <DD>Specifies a boolean value that determines whether this widget should draw 
  parts of itself using a platform-specific theme manager. The default is false. 
  <BR><BR>
  <DT>Command-Line Switch: <STRONG>-width</STRONG><BR>Database Name: 
  <STRONG>width</STRONG><BR>Database Class: <STRONG>Width</STRONG><BR>
  <DD>Specifies the desired width for the window in any of the forms acceptable 
  to <STRONG>Tk_GetPixels</STRONG>. The default is 200 pixel. If this option is 
  less than or equal to zero then the window will not request any size at all. 
  <BR><BR>
  <DT>Command-Line Switch: <STRONG>-wrap</STRONG><BR>Database Name: 
  <STRONG>wrap</STRONG><BR>Database Class: <STRONG>Wrap</STRONG><BR>
  <DD>Specifies whether items are arranged in a 1- or 2-dimensional layout. If 
  the value is an empty string (the default), then items are arranged from top 
  to bottom (-orient vertical) or from left to right (-orient horizontal) in a 
  1-dimensional layout. If the value is "<EM>N</EM> <STRONG>items</STRONG>", 
  then a no more than <EM>N</EM> items will appear in a vertical group (-orient 
  vertical) or horizontal group (-orient horizontal). If the value is 
  "<EM>N</EM> <STRONG>pixels</STRONG>", then a no vertical group of items will 
  be taller than <EM>N</EM> pixels (-orient vertical) or no horizontal group of 
  items will be wider than <EM>N</EM> pixels (-orient horizontal). If the value 
  is <STRONG>window</STRONG>, then a no vertical group of items will be taller 
  than the window (-orient vertical) or no horizontal group of items will be 
  wider than the window (-orient horizontal). <BR><BR>
  <DT>Command-Line Switch: <STRONG>-xscrolldelay</STRONG><BR>Database Name: 
  <STRONG>xScrollDelay</STRONG><BR>Database Class: 
  <STRONG>ScrollDelay</STRONG><BR>
  <DD>Specifies the amount of time before the default binding should handle 
  repeating mouse motion events in horizontal direction with button 1 pressed. 
  The value should be a list of 1 or 2 integers. The first integer specifies the 
  timespan in microseconds before the active item should be changed to get 
  nearer to the current mouse position. If there are two integers specified, the 
  first is only used for the first motion event, any repeating motion events are 
  handled after the seconds amount of miliseconds is elapsed. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-xscrollincrement</STRONG><BR>Database Name: 
  <STRONG>xScrollIncrement</STRONG><BR>Database Class: 
  <STRONG>ScrollIncrement</STRONG><BR>
  <DD>Specifies an increment for horizontal scrolling, in any of the usual forms 
  permitted for screen distances. If the value of this option is greater than 
  zero, the horizontal view in the window will be constrained so that the x 
  coordinate at the left edge of the window is always an even multiple of 
  <STRONG>-xscrollincrement</STRONG>; furthermore, the units for scrolling 
  (e.g., the change in view when the left and right arrows of a scrollbar are 
  selected) will also be <STRONG>-xscrollincrement</STRONG>. If the value of 
  this option is less than or equal to zero, then horizontal scrolling is 
  unconstrained. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-yscrolldelay</STRONG><BR>Database Name: 
  <STRONG>yScrollDelay</STRONG><BR>Database Class: 
  <STRONG>ScrollDelay</STRONG><BR>
  <DD>Specifies the amount of time before the default binding should handle 
  repeating mouse motion events in vertical direction with button 1 pressed. The 
  value should be a list of 1 or 2 integers. The first integer specifies the 
  timespan in microseconds before the active item should be changed to get 
  nearer to the current mouse position. If there are two integers specified, the 
  first is only used for the first motion event, any repeating motion events are 
  handled after the seconds amount of miliseconds is elapsed. <BR><BR>
  <DT>Command-Line Switch: <STRONG>-yscrollincrement</STRONG><BR>Database Name: 
  <STRONG>yScrollIncrement</STRONG><BR>Database Class: 
  <STRONG>ScrollIncrement</STRONG><BR>
  <DD>Specifies an increment for vertical scrolling, in any of the usual forms 
  permitted for screen distances. If the value of this option is greater than 
  zero, the vertical view in the window will be constrained so that the y 
  coordinate at the top edge of the window is always an even multiple of 
  <STRONG>-yscrollincrement</STRONG>; furthermore, the units for scrolling 
  (e.g., the change in view when the top and bottom arrows of a scrollbar are 
  selected) will also be <STRONG>-yscrollincrement</STRONG>. If the value of 
  this option is less than or equal to zero, then vertical scrolling is 
  unconstrained. </DD></DL>
<H2><A name=widget_command>WIDGET COMMAND</A></H2>
<P>The <B class=cmd>treectrl</B> command creates a new Tcl command whose name is 
the same as the path name of the treectrl's window. This command may be used to 
invoke various operations on the widget. It has the following general form: 
<P><I class=arg>pathName</I> <I class=arg>option</I> ?<I class=arg>arg arg 
...</I>? 
<P><I class=arg>PathName</I> is the name of the command, which is the same as 
the treectrl widget's path name. <I class=arg>Option</I> and the <I 
class=arg>arg</I>s determine the exact behavior of the command. The following 
commands are possible for treectrl widgets: 
<DL>
  <DT><A name=2><I class=arg>pathName</I> <B class=cmd>activate</B> <I 
  class=arg>itemDesc</I></A>
  <DD>Sets the active item to the one described by <I class=arg>itemDesc</I>, 
  and switches on the state <STRONG>active</STRONG> for this item. From now on 
  the item can be retrieved with the item description <STRONG>active</STRONG>. 
  An <STRONG>&lt;ActiveItem&gt;</STRONG> event is generated. <BR><BR>
  <DT><A name=3><I class=arg>pathName</I> <B class=cmd>canvasx</B> <I 
  class=arg>screenx</I></A>
  <DD>Given a window x-coordinate in the treectrl <I class=arg>screenx</I>, this 
  command returns the treectrl x-coordinate that is displayed at that location. 
  <BR><BR>
  <DT><A name=4><I class=arg>pathName</I> <B class=cmd>canvasy</B> <I 
  class=arg>screeny</I></A>
  <DD>Given a window y-coordinate in the treectrl <I class=arg>screeny</I>, this 
  command returns the treectrl y-coordinate that is displayed at that location. 
  <BR><BR>
  <DT><A name=5><I class=arg>pathName</I> <B class=cmd>cget</B> <I 
  class=arg>option</I></A>
  <DD>Returns the current value of the configuration option given by <I 
  class=arg>option</I>. <I class=arg>Option</I> may have any of the values 
  accepted by the <B class=cmd>tree</B> command. <BR><BR>
  <DT><A name=6><I class=arg>pathName</I> <B class=cmd>collapse</B> 
  ?<STRONG>-recurse</STRONG>? ?<I class=arg>itemDesc ...</I>?</A>
  <DD>Use <B class=cmd>item collapse</B> instead. <BR><BR>
  <DT><A name=7><I class=arg>pathName</I> <B class=cmd>column</B> <I 
  class=arg>option</I> <I class=arg>column</I> ?<I class=arg>arg ...</I>?</A>
  <DD>This command is used to manipulate the columns of the treectrl widget (see 
  section <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#columns">COLUMNS</A> 
  below). The exact behavior of the command depends on the <I 
  class=arg>option</I> argument that follows the <B class=cmd>column</B> 
  argument. The following forms of the command are supported: <BR><BR>
  <DL>
    <DT><A name=8><I class=arg>pathName</I> <B class=cmd>column bbox</B> <I 
    class=arg>column</I></A>
    <DD>Returns a list with four elements giving the bounding box for the column 
    header specified by <I class=arg>column</I>. If the treectrl is configured 
    not to display the column headers by means of the 
    <STRONG>-showheader</STRONG> option, then an empty list is returned instead. 
    <BR><BR>
    <DT><A name=9><I class=arg>pathName</I> <B class=cmd>column cget</B> <I 
    class=arg>column</I> <I class=arg>option</I></A>
    <DD>This command returns the current value of the option named <I 
    class=arg>option</I> for the column specified by <I class=arg>column</I>, <I 
    class=arg>Column</I> may also be the string <STRONG>tail</STRONG> to specify 
    the tail column. <I class=arg>Option</I> may have any of the values accepted 
    by the <B class=cmd>column configure</B> widget command. <BR><BR>
    <DT><A name=10><I class=arg>pathName</I> <B class=cmd>column configure</B> 
    <I class=arg>column</I> ?<I class=arg>option</I>? ?<I class=arg>value</I>? 
    ?<I class=arg>option value ...</I>?</A>
    <DD>This command is similar to the <B class=cmd>configure</B> widget command 
    except that it modifies options associated with the column specified by <I 
    class=arg>column</I> instead of modifying options for the overall treectrl 
    widget. <I class=arg>Column</I> may be the string <STRONG>tail</STRONG> to 
    specify the tail column. If <I class=arg>column</I> is the string 
    <STRONG>all</STRONG>, at least one option-value pair must be given; in this 
    case all the columns are configured. If no <I class=arg>option</I> is 
    specified, the command returns a list describing all of the available 
    options for <I class=arg>column</I> (see <STRONG>Tk_ConfigureInfo</STRONG> 
    for information on the format of this list). If <I class=arg>option</I> is 
    specified with no <I class=arg>value</I>, then the command returns a list 
    describing the one named option (this list will be identical to the 
    corresponding sublist of the value returned if no <I class=arg>option</I> is 
    specified). If one or more <I class=arg>option</I>-<I class=arg>value</I> 
    pairs are specified, then the command modifies the given option(s) to have 
    the given value(s) for <I class=arg>column</I>; in this case the command 
    returns an empty string. <BR><BR>See <A 
    href="http://tktreectrl.sourceforge.net/treectrl.html#columns">COLUMNS</A> 
    below for details on the options available for columns. <BR><BR>
    <DT><A name=11><I class=arg>pathName</I> <B class=cmd>column compare</B> <I 
    class=arg>column1</I> <I class=arg>op</I> <I class=arg>column2</I></A>
    <DD>From both <I class=arg>column</I>s the index is retrieved (as returned 
    from the <B class=cmd>column order</B> widget command). Then these indexes 
    are compared using the operator <I class=arg>op</I>, which must be either 
    <STRONG>&lt;</STRONG>, <STRONG>&lt;=</STRONG>, <STRONG>==</STRONG>, 
    <STRONG>&gt;=</STRONG>, <STRONG>&gt;</STRONG>, or <STRONG>!=</STRONG>. The 
    return value of this command is 1 if the comparison evaluated to true, 0 
    otherwise. <BR><BR>
    <DT><A name=12><I class=arg>pathName</I> <B class=cmd>column count</B></A>
    <DD>Returns a decimal string giving the number of columns created by the <B 
    class=cmd>column create</B> widget command which haven't been deleted by the 
    <B class=cmd>column delete</B> widget command. The <STRONG>tail</STRONG> 
    column is not counted. <BR><BR>
    <DT><A name=13><I class=arg>pathName</I> <B class=cmd>column create</B> ?<I 
    class=arg>option value ...</I>?</A>
    <DD>This command creates a new column in the treectrl widget. The new column 
    is placed to the right of all other columns (except the 
    <STRONG>tail</STRONG> column). Any <I class=arg>option</I>-<I 
    class=arg>value</I> arguments configure the new column according to the <B 
    class=cmd>column configure</B> command. The return value is the unique 
    identifier of the new column. <BR><BR>
    <DT><A name=14><I class=arg>pathName</I> <B class=cmd>column delete</B> <I 
    class=arg>column</I></A>
    <DD>Deletes the specified <I class=arg>column</I> from the treectrl widget. 
    If <I class=arg>column</I> is the string <STRONG>all</STRONG>, all columns 
    except the tail column are deleted. <BR><BR>
    <DT><A name=15><I class=arg>pathName</I> <B class=cmd>column dragcget</B> <I 
    class=arg>option</I></A>
    <DD>
    <DT><A name=16><I class=arg>pathName</I> <B class=cmd>column 
    dragconfigure</B> ?<I class=arg>option</I>? ?<I class=arg>value</I>? ?<I 
    class=arg>option value ...</I>?</A>
    <DD>The user can move a column within a treectrl by drag-and-drop. Feedback 
    consists of a semi-transparent photo image of the header of the column being 
    dragged and a 2-pixel-thick vertical line to indicate where the column may 
    be dropped. The drag image consists of a colored background rectangle plus 
    the image and/or text displayed in the column header. The 2-pixel-thick line 
    will be drawn over the left edge of the column before which the dragged 
    column may be dropped. <BR><BR>The library scripts generate a 
    &lt;ColumnDrag-accept&gt; event when the user has successfully 
    drag-and-drop'd a column. You will have to bind a script to this event if 
    you want to move the dragged column. <BR><BR>The following configuration 
    options are supported: <BR><BR>
    <DL>
      <DT><STRONG><STRONG>-enable</STRONG></STRONG> <I class=arg>boolean</I>
      <DD>Controls whether the user is allowed to rearrange columns by 
      drag-and-drop. <BR><BR>
      <DT><STRONG><STRONG>-imagealpha</STRONG></STRONG> <I class=arg>alpha</I>
      <DD><I class=arg>Alpha</I> is an integer from 0 (invisible) to 255 
      (opaque) controlling the transparency of the drag image. Any value outside 
      this range is clipped. <BR><BR>
      <DT><STRONG><STRONG>-imagecolor</STRONG></STRONG> <I 
      class=arg>background</I>
      <DD><I class=arg>Background</I> is the color of the drag image background 
      rectangle. <BR><BR>
      <DT><STRONG><STRONG>-imagecolumn</STRONG></STRONG> <I class=arg>column</I>
      <DD><I class=arg>Column</I> specifies the column to create the drag image 
      from. <BR><BR>
      <DT><STRONG><STRONG>-imageoffset</STRONG></STRONG> <I class=arg>offset</I>
      <DD><I class=arg>Offset</I> is the horizontal screen distance the drag 
      image is offset from its starting position. <BR><BR>
      <DT><STRONG><STRONG>-indicatorcolor</STRONG></STRONG> <I 
      class=arg>color</I>
      <DD><I class=arg>Color</I> is the color of the 2-pixel-thick line. 
<BR><BR>
      <DT><STRONG><STRONG>-indicatorcolumn</STRONG></STRONG> <I 
      class=arg>column</I>
      <DD>The 2-pixel-thick line will be drawn over the left edge of <I 
      class=arg>column</I>. </DD></DL>
    <DT><A name=17><I class=arg>pathName</I> <B class=cmd>column index</B> <I 
    class=arg>column</I></A>
    <DD>Deprecated. Use <B class=cmd>column id</B> instead. <BR><BR>
    <DT><A name=18><I class=arg>pathName</I> <B class=cmd>column id</B> <I 
    class=arg>column</I></A>
    <DD>This command resolves the column description <I class=arg>column</I> 
    into a unique column identifier (see <A 
    href="http://tktreectrl.sourceforge.net/treectrl.html#column_description">COLUMN 
    DESCRIPTION</A> below). If the column described by <I class=arg>column</I> 
    doesn't exist, this command returns an empty string. <BR><BR>
    <DT><A name=19><I class=arg>pathName</I> <B class=cmd>column list</B> ?<I 
    class=arg>-visible</I>?</A>
    <DD>This command returns a list of identifiers for every column (except the 
    tail) from left to right. If <I class=arg>-visible</I> is given, only 
    columns whose -visible option is true are returned. <BR><BR>
    <DT><A name=20><I class=arg>pathName</I> <B class=cmd>column move</B> <I 
    class=arg>column</I> <I class=arg>before</I></A>
    <DD>Moves the specified <I class=arg>column</I> to the left of the column 
    specified by <I class=arg>before</I>. If <I class=arg>before</I> is the 
    string <STRONG>tail</STRONG>, the column <I class=arg>column</I> will become 
    the last column. <BR><BR>
    <DT><A name=21><I class=arg>pathName</I> <B class=cmd>column neededwidth</B> 
    <I class=arg>column</I></A>
    <DD>This command returns a decimal string giving the needed width of the 
    column specified by <I class=arg>column</I>. The needed width is the maximum 
    of the width of the column header and the width of the <EM>widest</EM> 
    currently visible item. <BR><BR>
    <DT><A name=22><I class=arg>pathName</I> <B class=cmd>column order</B> <I 
    class=arg>column</I> ?<I class=arg>-visible</I>?</A>
    <DD>This command returns a decimal string giving the position of <I 
    class=arg>column</I> in the list of columns starting from zero for the 
    leftmost column. If <I class=arg>-visible</I> is given, only columns whose 
    -visible option is true are considered, and -1 is returned if <I 
    class=arg>column</I>'s -visible option is false. <BR><BR>
    <DT><A name=23><I class=arg>pathName</I> <B class=cmd>column width</B> <I 
    class=arg>column</I></A>
    <DD>This command returns a decimal string giving the width in pixels of the 
    column specified by <I class=arg>column</I>, even if the treectrl is 
    configured to not display the column headers by means of the 
    <STRONG>-showheader</STRONG> option. </DD></DL>
  <DT><A name=24><I class=arg>pathName</I> <B class=cmd>compare</B> <I 
  class=arg>itemDesc1</I> <I class=arg>op</I> <I class=arg>itemDesc2</I></A>
  <DD>Deprecated. Use the <B class=cmd>item compare</B> command instead. 
<BR><BR>
  <DT><A name=25><I class=arg>pathName</I> <B class=cmd>configure</B> ?<I 
  class=arg>option</I>? ?<I class=arg>value option value ...</I>?</A>
  <DD>Query or modify the configuration options of the widget. If no <I 
  class=arg>option</I> is specified, returns a list describing all of the 
  available options for <I class=arg>pathName</I> (see 
  <STRONG>Tk_ConfigureInfo</STRONG> for information on the format of this list). 
  If <I class=arg>option</I> is specified with no <I class=arg>value</I>, then 
  the command returns a list describing the one named option (this list will be 
  identical to the corresponding sublist of the value returned if no <I 
  class=arg>option</I> is specified). If one or more <I class=arg>option</I>-<I 
  class=arg>value</I> pairs are specified, then the command modifies the given 
  widget option(s) to have the given value(s); in this case the command returns 
  an empty string. <I class=arg>Option</I> may have any of the values accepted 
  by the <B class=cmd>treectrl</B> command. <BR><BR>
  <DT><A name=26><I class=arg>pathName</I> <B class=cmd>contentbox</B></A>
  <DD>Returns a list with four elements giving the bounding box for the space 
  used to display the items, i.e. the space of the treectrl window without the 
  surrounding borders or the column headers. <BR><BR>
  <DT><A name=27><I class=arg>pathName</I> <B class=cmd>debug</B> <I 
  class=arg>option</I> ?<I class=arg>arg arg ...</I>?</A>
  <DD>This command is used to facilitate debugging of the treectrl widget. The 
  exact behavior of the command depends on the <I class=arg>option</I> argument 
  that follows the <B class=cmd>debug</B> argument. The following forms of the 
  command are supported: <BR><BR>
  <DL>
    <DT><A name=28><I class=arg>pathName</I> <B class=cmd>debug cget</B> <I 
    class=arg>element</I> <I class=arg>option</I></A>
    <DD>This command returns the current value of the debugging option named <I 
    class=arg>option</I>. <I class=arg>Option</I> may have any of the values 
    accepted by the <B class=cmd>debug configure</B> widget command. <BR><BR>
    <DT><A name=29><I class=arg>pathName</I> <B class=cmd>debug configure</B> <I 
    class=arg>element</I> ?<I class=arg>option</I>? ?<I class=arg>value</I>? ?<I 
    class=arg>option value ...</I>?</A>
    <DD>This command is similar to the <B class=cmd>configure</B> widget command 
    except that it modifies debugging options instead of modifying options for 
    the overall treectrl widget. If no <I class=arg>option</I> is specified, the 
    command returns a list describing all of the available debugging options 
    (see <STRONG>Tk_ConfigureInfo</STRONG> for information on the format of this 
    list). If <I class=arg>option</I> is specified with no <I 
    class=arg>value</I>, then the command returns a list describing the one 
    named option (this list will be identical to the corresponding sublist of 
    the value returned if no <I class=arg>option</I> is specified). If one or 
    more <I class=arg>option</I>-<I class=arg>value</I> pairs are specified, 
    then the command modifies the given debugging option(s) to have the given 
    value(s); in this case the command returns an empty string. <BR><BR>The 
    following debugging options are supported: <BR><BR>
    <DL>
      <DT><STRONG><STRONG>-displaydelay</STRONG></STRONG> <I 
class=arg>millis</I>
      <DD>Specifies a time duration in milliseconds, which should be waited 
      after something has been drawn to the screen. Setting this option has only 
      an effect, if the debugging options <STRONG>-enable</STRONG> and 
      <STRONG>-display</STRONG> are switched on. <BR><BR>
      <DT><STRONG><STRONG>-data</STRONG></STRONG> <I class=arg>boolean</I>
      <DD>If this option is switched on (together with the debugging option 
      <STRONG>-enable</STRONG>), at various places a consistence check on the 
      internal data structure is made (e.g. for every item is checked, if the 
      registered number of children is equal to the number of child items). If 
      an inconsistency was found, a Tcl background error is raised. <BR><BR>
      <DT><STRONG><STRONG>-display</STRONG></STRONG> <I class=arg>boolean</I>
      <DD>If this option is switched on (together with the debugging option 
      <STRONG>-enable</STRONG>), at varios places additional debugging output is 
      printed to stdout. <BR><BR>
      <DT><STRONG><STRONG>-enable</STRONG></STRONG> <I class=arg>boolean</I>
      <DD>All other debugging options only take effect, if this option is also 
      switched on. <BR><BR>
      <DT><STRONG><STRONG>-erasecolor</STRONG></STRONG> <I class=arg>color</I>
      <DD>Use this color, when parts of the treectrl widget should be deleted. 
      If you use an unusual color for this option (like <STRONG>pink</STRONG>), 
      superflous screen redraws can be spotted more easily. Setting this option 
      has only an effect, if the debugging options <STRONG>-enable</STRONG> and 
      <STRONG>-display</STRONG> are switched on. </DD></DL>
    <DT><A name=30><I class=arg>pathName</I> <B class=cmd>debug dinfo</B></A>
    <DD>For every of the treectrl widget a line with some internal values info 
    about all items is printed to stdout. The command returns the empty string. 
    <BR><BR>
    <DT><A name=31><I class=arg>pathName</I> <B class=cmd>debug scroll</B></A>
    <DD>Returns a string useful for debugging vertical scrolling. </DD></DL>
  <DT><A name=32><I class=arg>pathName</I> <B class=cmd>depth</B> ?<I 
  class=arg>itemDesc</I>?</A>
  <DD>If the additional argument <I class=arg>itemDesc</I> is specified, returns 
  a decimal string giving the depth of the item describing by <I 
  class=arg>itemDesc</I>, whereas depth is defined as the number of steps you 
  must go upward to reach to root item. If no <I class=arg>itemDesc</I> is 
  specified, the maximum depth of all items in the treectrl widget is returned 
  instead. <BR><BR>
  <DT><A name=33><I class=arg>pathName</I> <B class=cmd>dragimage</B> <I 
  class=arg>option</I> ?<I class=arg>arg ...</I>?</A>
  <DD>This command is used to manipulate the dragimage, one or more dotted lines 
  around rectangular regions of the treectrl widget. The exact behavior of the 
  command depends on the <I class=arg>option</I> argument that follows the <B 
  class=cmd>dragimage</B> argument. The following forms of the command are 
  supported: <BR><BR>
  <DL>
    <DT><A name=34><I class=arg>pathName</I> <B class=cmd>dragimage add</B> <I 
    class=arg>itemDesc</I> ?<I class=arg>column</I>? ?<I 
    class=arg>element</I>?</A>
    <DD>Adds the shapes of the item described by <I class=arg>itemDesc</I> to 
    the shapes of the dragimage. Specifying additional arguments reduces the 
    number of rectangles that are added to the dragimage. If no additional 
    arguments is specified, for every element of the item in every column a 
    dotted rectangles is added. If <I class=arg>column</I> is specified, all 
    elements in other columns are ignored. If also <I class=arg>element</I> is 
    specified, only a rectangle for this one element of the specified item in 
    the given column is added. <BR><BR>
    <DT><A name=35><I class=arg>pathName</I> <B class=cmd>dragimage cget</B> <I 
    class=arg>option</I></A>
    <DD>This command returns the current value of the dragimage option named <I 
    class=arg>option</I>. <I class=arg>Option</I> may have any of the values 
    accepted by the <B class=cmd>dragimage configure</B> widget command. 
<BR><BR>
    <DT><A name=36><I class=arg>pathName</I> <B class=cmd>dragimage 
clear</B></A>
    <DD>Removes all shapes (if there are any) from the dragimage. This command 
    does not modify the dragimage offset. <BR><BR>
    <DT><A name=37><I class=arg>pathName</I> <B class=cmd>dragimage 
    configure</B> ?<I class=arg>option</I>? ?<I class=arg>value</I>? ?<I 
    class=arg>option value ...</I>?</A>
    <DD>This command is similar to the <B class=cmd>configure</B> widget command 
    except that it modifies the dragimage options instead of modifying options 
    for the overall treectrl widget. If no <I class=arg>option</I> is specified, 
    the command returns a list describing all of the available dragimage options 
    (see <STRONG>Tk_ConfigureInfo</STRONG> for information on the format of this 
    list). If <I class=arg>option</I> is specified with no <I 
    class=arg>value</I>, then the command returns a list describing the one 
    named dragimage option (this list will be identical to the corresponding 
    sublist of the value returned if no <I class=arg>option</I> is specified). 
    If one or more <I class=arg>option</I>-<I class=arg>value</I> pairs are 
    specified, then the command modifies the given dragimage option(s) to have 
    the given value(s); in this case the command returns an empty string. 
    <BR><BR>The following dragimage options are supported: <BR><BR>
    <DL>
      <DT><STRONG><STRONG>-visible</STRONG></STRONG> <I class=arg>boolean</I>
      <DD>Specifies a boolean value which determines whether the dragimage 
      should currently be visible. </DD></DL>
    <DT><A name=38><I class=arg>pathName</I> <B class=cmd>dragimage offset</B> 
    ?<I class=arg>x y</I>?</A>
    <DD>Returns a list containing the x and y offsets of the dragimage, if no 
    additional arguments are specified. The dragimage offset is the screen 
    distance, the image is displayed relative to the item its shape is derived 
    from. If two coordinates are specified, sets the dragimage offset to the 
    given coordinates <I class=arg>x</I> and <I class=arg>y</I>. </DD></DL>
  <DT><A name=39><I class=arg>pathName</I> <B class=cmd>element</B> <I 
  class=arg>option</I> ?<I class=arg>element</I>? ?<I class=arg>arg arg 
  ...</I>?</A>
  <DD>This command is used to manipulate elements (see <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#elements">ELEMENTS</A> 
  below). The exact behavior of the command depends on the <I 
  class=arg>option</I> argument that follows the <B class=cmd>element</B> 
  argument. The following forms of the command are supported: <BR><BR>
  <DL>
    <DT><A name=40><I class=arg>pathName</I> <B class=cmd>element cget</B> <I 
    class=arg>element</I> <I class=arg>option</I></A>
    <DD>This command returns the current value of the option named <I 
    class=arg>option</I> associated with the element given by <I 
    class=arg>element</I>. <I class=arg>Option</I> may have any of the values 
    accepted by the <B class=cmd>element configure</B> widget command. <BR><BR>
    <DT><A name=41><I class=arg>pathName</I> <B class=cmd>element configure</B> 
    <I class=arg>element</I> ?<I class=arg>option</I>? ?<I class=arg>value</I>? 
    ?<I class=arg>option value ...</I>?</A>
    <DD>This command is similar to the <B class=cmd>configure</B> widget command 
    except that it modifies options associated with the element given by <I 
    class=arg>element</I> instead of modifying options for the overall treectrl 
    widget. If no <I class=arg>option</I> is specified, the command returns a 
    list describing all of the available options for <I class=arg>element</I> 
    (see <STRONG>Tk_ConfigureInfo</STRONG> for information on the format of this 
    list). If <I class=arg>option</I> is specified with no <I 
    class=arg>value</I>, then the command returns a list describing the one 
    named option (this list will be identical to the corresponding sublist of 
    the value returned if no <I class=arg>option</I> is specified). If one or 
    more <I class=arg>option</I>-<I class=arg>value</I> pairs are specified, 
    then the command modifies the given option(s) to have the given value(s) in 
    <I class=arg>element</I>; in this case the command returns an empty string. 
    See <A 
    href="http://tktreectrl.sourceforge.net/treectrl.html#elements">ELEMENTS</A> 
    below for details on the options available for elements. <BR><BR>
    <DT><A name=42><I class=arg>pathName</I> <B class=cmd>element create</B> <I 
    class=arg>element</I> <I class=arg>type</I> ?<I class=arg>option value 
    ...</I>?</A>
    <DD>Create a new elememt in <I class=arg>pathName</I> of type <I 
    class=arg>type</I> with name <I class=arg>element</I>. The exact format of 
    the arguments after <I class=arg>type</I> depends on <I class=arg>type</I>, 
    but generally consist of specifications for zero or more element options. 
    See the subsections on individual element types below for more on the syntax 
    of this command. This command returns the name for the new element. <BR><BR>
    <DT><A name=43><I class=arg>pathName</I> <B class=cmd>element delete</B> ?<I 
    class=arg>element ...</I>?</A>
    <DD>Deletes each of the named elements and returns an empty string. If an 
    element is deleted while it is still configured as an element of one or more 
    styles by means of the <B class=cmd>style elements</B> widget command, it is 
    also removed from the element lists of these styles. <BR><BR>
    <DT><A name=44><I class=arg>pathName</I> <B class=cmd>element names</B></A>
    <DD>Returns a list containing the names of all existing elements. <BR><BR>
    <DT><A name=45><I class=arg>pathName</I> <B class=cmd>element perstate</B> 
    <I class=arg>element</I> <I class=arg>option</I> <I 
    class=arg>stateList</I></A>
    <DD>This command returns the value of the <A 
    href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
    option named <I class=arg>option</I> for <I class=arg>element</I> for a 
    certain state. <I class=arg>StateList</I> is a list of state names (static 
    and dynamic, see <A 
    href="http://tktreectrl.sourceforge.net/treectrl.html#states">STATES</A>) 
    which specifies the state to use. <BR><BR>
    <DT><A name=46><I class=arg>pathName</I> <B class=cmd>element type</B> <I 
    class=arg>element</I></A>
    <DD>Returns the type of the elements given by <I class=arg>element</I>, such 
    as <STRONG>rect</STRONG> or <STRONG>text</STRONG>. </DD></DL>
  <DT><A name=47><I class=arg>pathName</I> <B class=cmd>expand</B> 
  ?<STRONG>-recurse</STRONG>? ?<I class=arg>itemDesc ...</I>?</A>
  <DD>Use <B class=cmd>item expand</B> instead. <BR><BR>
  <DT><A name=48><I class=arg>pathName</I> <B class=cmd>identify</B> <I 
  class=arg>x</I> <I class=arg>y</I></A>
  <DD>Returns a list containing some diagnostics about what is displayed at the 
  given windows coordinates <I class=arg>x</I> and <I class=arg>y</I>. The 
  resulting list may be empty, if nothing is displayed at the given coordinates, 
  otherwise the first list element is <STRONG>header</STRONG> or 
  <STRONG>item</STRONG>. <BR><BR>If the coordinates are in the header area and 
  thus the first element of the result is <STRONG>header</STRONG>, the number of 
  the column or the string <STRONG>tail</STRONG> is the second element in the 
  resulting list; if the x coordinate is near the left or right end of the 
  header, a third element <STRONG>left</STRONG> or <STRONG>right</STRONG> is 
  added respectively. <BR><BR>If the coordinates are below the header area and 
  thus the first element of the result is <STRONG>item</STRONG>, the numerical 
  id of the item is the second element in the resulting list. If the x 
  coordinate doesn't fall into the column displaying the hierarchical structure, 
  the elements <STRONG>column</STRONG> and the column number are added. If the x 
  coordinate is within the column displaying the hierarchical structure, the 
  following elements are added to the resulting list: <STRONG>line</STRONG> and 
  the numerical id of the item the line comes from, if the x coordinate is above 
  an item connecting line; <STRONG>button</STRONG>, if the x coordinate is above 
  a button; <STRONG>column</STRONG>, the column number, <STRONG>elem</STRONG>, 
  and the element name, if the x coordinate is above an element of the item; 
  <STRONG>column</STRONG> and the column number, if the x coordinate is to the 
  right of the elements; nothing otherwise. <BR><BR>
  <DT><A name=49><I class=arg>pathName</I> <B class=cmd>index</B> <I 
  class=arg>itemDesc</I></A>
  <DD>Deprecated. Use <B class=cmd>item id</B> instead. <BR><BR>
  <DT><A name=50><I class=arg>pathName</I> <B class=cmd>item</B> <I 
  class=arg>option</I> ?<I class=arg>arg ...</I>?</A>
  <DD>This command is used to manipulate items. The exact behavior of the 
  command depends on the <I class=arg>option</I> argument that follows the <B 
  class=cmd>item</B> argument. The following forms of the command are supported: 
  <BR><BR>
  <DL>
    <DT><A name=51><I class=arg>pathName</I> <B class=cmd>item ancestors</B> <I 
    class=arg>itemDesc</I></A>
    <DD>Returns a list containing the item ids of the ancestors of the item 
    specified by <I class=arg>itemDesc</I>. The first list value is the parent, 
    the second is the parent's parent, an so on. The last list value will be the 
    root item if <I class=arg>itemDesc</I> is a descendant of the root item. 
    <BR><BR>
    <DT><A name=52><I class=arg>pathName</I> <B class=cmd>item bbox</B> <I 
    class=arg>itemDesc</I> ?<I class=arg>column</I>? ?<I 
    class=arg>element</I>?</A>
    <DD>Returns a list with four elements giving the bounding box for the item 
    described by <I class=arg>itemDesc</I>. If no further argument is specified, 
    the bbox spans the area of the item over all columns. If a <I 
    class=arg>column</I> is specified, only the area of the item in this column 
    is considered, if an additional <I class=arg>element</I> is specified, the 
    area of this <I class=arg>element</I> in <I class=arg>column</I> of the 
    specified item is returned. <BR><BR>
    <DT><A name=53><I class=arg>pathName</I> <B class=cmd>item cget</B> <I 
    class=arg>itemDesc</I> <I class=arg>option</I></A>
    <DD>Returns the current value of the configuration option for the item 
    specified by <I class=arg>itemDesc</I> whose name is <I 
    class=arg>option</I>. <I class=arg>Option</I> may have any of the values 
    accepted by the <B class=cmd>item configure</B> command. <BR><BR>
    <DT><A name=54><I class=arg>pathName</I> <B class=cmd>item children</B> <I 
    class=arg>itemDesc</I></A>
    <DD>Returns a list containing the item ids of all children of the item 
    specified by <I class=arg>itemDesc</I> in the correct order from the first 
    child to the last child. <BR><BR>
    <DT><A name=55><I class=arg>pathName</I> <B class=cmd>item collapse</B> <I 
    class=arg>itemDesc</I> ?<STRONG>-recurse</STRONG>?</A>
    <DD>Switches off the <STRONG>open</STRONG> state of the item(s) described by 
    <I class=arg>itemDesc</I>. If the item has descendants, they are no longer 
    displayed. If the item is configured to have a button, the button will now 
    display the image or bitmap configured with the widget options 
    <STRONG>-buttonimage</STRONG> or <STRONG>-buttonbitmap</STRONG>, or a 
    <EM>+</EM> sign if no image or bitmap is configured. If the item is already 
    closed, this command has no effect. <I class=arg>ItemDesc</I> may also be 
    the string <STRONG>all</STRONG>, in which case all items of the treectrl 
    widget are collapsed. If <STRONG>-recurse</STRONG> is specified, all 
    descendants of <I class=arg>itemDesc</I> will also be collapsed. For every 
    item, that actually will be collapsed, two events are generated: a 
    <STRONG>&lt;Collapse-before&gt;</STRONG> event before the item state is 
    changed, and a <STRONG>&lt;Collapse-after&gt;</STRONG> event after the item 
    state was changed. <BR><BR>
    <DT><A name=56><I class=arg>pathName</I> <B class=cmd>item compare</B> <I 
    class=arg>itemDesc1</I> <I class=arg>op</I> <I class=arg>itemDesc2</I></A>
    <DD>From both items described by the <I class=arg>itemDesc</I>s the index is 
    retrieved (as returned from the <B class=cmd>item order</B> widget command). 
    Then these indexes are compared using the operator <I class=arg>op</I>, 
    which must be either <STRONG>&lt;</STRONG>, <STRONG>&lt;=</STRONG>, 
    <STRONG>==</STRONG>, <STRONG>&gt;=</STRONG>, <STRONG>&gt;</STRONG>, or 
    <STRONG>!=</STRONG>. The return value of this command is 1 if the comparison 
    evaluated to true, 0 otherwise. <BR><BR>
    <DT><A name=57><I class=arg>pathName</I> <B class=cmd>item complex</B> <I 
    class=arg>itemDesc</I> ?<I class=arg>list...</I>?</A>
    <DD>This horrible command is now deprecated. Use <B class=cmd>item element 
    configure</B> instead. For every column of the treectrl there may be 
    specified one <I class=arg>list</I>. Each <I class=arg>list</I> should look 
    like this: 
    <P>
    <TABLE>
      <TBODY>
      <TR>
        <TD bgColor=black>&nbsp;</TD>
        <TD><PRE class=sample>{ {element option value...} {element option value...} ...}
</PRE></TD></TR></TBODY></TABLE></P>Every <I class=arg>option</I> must be 
    known by the element's type (see <A 
    href="http://tktreectrl.sourceforge.net/treectrl.html#elements">ELEMENTS</A> 
    below). Each <I class=arg>option</I> will be set to <I class=arg>value</I> 
    for the element in this one column in this item. <BR><BR>
    <DT><A name=58><I class=arg>pathName</I> <B class=cmd>item configure</B> <I 
    class=arg>itemDesc</I> ?<I class=arg>option</I>? ?<I class=arg>value</I>? 
    ?<I class=arg>option value ...</I>?</A>
    <DD>If no <I class=arg>option</I> is specified, returns a list describing 
    all of the available options for the item given by <I class=arg>itemDesc</I> 
    (see <STRONG>Tk_ConfigureInfo</STRONG> for information on the format of this 
    list). If <I class=arg>option</I> is specified with no value, then the 
    command returns a list describing the one named option (this list will be 
    identical to the corresponding sublist of the value returned if no <I 
    class=arg>option</I> is specified). If one or more <I 
    class=arg>option</I>-<I class=arg>value</I> pairs are specified, then the 
    command modifies the given item option(s) to have the given value(s); in 
    this case the command returns an empty string. <BR><BR>The following options 
    are supported by this command (see <B class=cmd>item create</B> for the 
    meaning of each option): <BR><BR>
    <DL>
      <DT><STRONG><STRONG>-button</STRONG></STRONG> <I class=arg>boolean</I>
      <DD>
      <DT><STRONG><STRONG>-height</STRONG></STRONG> <I class=arg>height</I>
      <DD>
      <DT><STRONG><STRONG>-visible</STRONG></STRONG> <I class=arg>boolean</I>
      <DD></DD></DL>
    <DT><A name=59><I class=arg>pathName</I> <B class=cmd>item count</B></A>
    <DD>Returns a decimal string giving the number of items created by the <B 
    class=cmd>item create</B> widget command which haven't been deleted by the 
    <B class=cmd>item delete</B> widget command, plus 1 for the ever-present 
    root item. <BR><BR>
    <DT><A name=60><I class=arg>pathName</I> <B class=cmd>item create</B> ?<I 
    class=arg>option value ...</I>?</A>
    <DD>Creates some new items and optionally returns a list of unique 
    identifiers for those items. The new items have the states 
    <STRONG>open</STRONG> and <STRONG>enabled</STRONG> set by default. If the 
    treectrl widget currently has the focus, the state <STRONG>focus</STRONG> is 
    also set. <BR><BR>The following options are supported by this command: 
    <BR><BR>
    <DL>
      <DT><STRONG><STRONG>-button</STRONG></STRONG> <I class=arg>boolean</I>
      <DD><I class=arg>Boolean</I> must have one of the forms accepted by 
      <STRONG>Tcl_GetBoolean</STRONG>. It indicates whether or not an 
      expand/collapse button should be drawn next to this item, typically to 
      indicate the item has children. The button will only be displayed if: a) 
      the column specified by the treectrl option <STRONG>-treecolumn</STRONG> 
      is visible; and b) the treectrl option <STRONG>-showbuttons</STRONG> is 
      true <BR><BR>
      <DT><STRONG><STRONG>-count</STRONG></STRONG> <I class=arg>numItems</I>
      <DD>Specifies the number of items to create. Must be &gt;= 0. Defaults to 
      1. <BR><BR>
      <DT><STRONG><STRONG>-height</STRONG></STRONG> <I class=arg>height</I>
      <DD>Specifies a fixed height in any of the forms acceptable to 
      <STRONG>Tk_GetPixels</STRONG>. Must be &gt;= 0. If <I class=arg>height</I> 
      is zero then the item's height is unspecified. Defaults to 0. <BR><BR>
      <DT><STRONG><STRONG>-nextsibling</STRONG></STRONG> <I 
      class=arg>itemDesc</I>
      <DD>Specifies the item before which the new items will be inserted. The 
      new items will have the same parent as <I class=arg>itemDesc</I>. <BR><BR>
      <DT><STRONG><STRONG>-open</STRONG></STRONG> <I class=arg>boolean</I>
      <DD>Specifies whether the items should be open or closed. Default is true. 
      <BR><BR>
      <DT><STRONG><STRONG>-parent</STRONG></STRONG> <I class=arg>itemDesc</I>
      <DD>Specifies the item which the new items will be the children of. The 
      new items will be appended to the list of children of <I 
      class=arg>itemDesc</I>. <BR><BR>
      <DT><STRONG><STRONG>-prevsibling</STRONG></STRONG> <I 
      class=arg>itemDesc</I>
      <DD>Specifies the item after which the new items will be inserted. The new 
      items will have the same parent as <I class=arg>itemDesc</I>. <BR><BR>
      <DT><STRONG><STRONG>-returnid</STRONG></STRONG> <I class=arg>boolean</I>
      <DD>Specifies whether or not to return a list of item identifiers for the 
      newly created items. Specifying false is useful when creating a large 
      number of items in the console or to improve performance. Default is true. 
      <BR><BR>
      <DT><STRONG><STRONG>-visible</STRONG></STRONG> <I class=arg>boolean</I>
      <DD><I class=arg>Boolean</I> must have one of the forms accepted by 
      <STRONG>Tcl_GetBoolean</STRONG>. It indicates that the item should be 
      displayed in the list. The item will only be displayed if: a) each 
      ancestor is a descendant of the root item (not an orphan); and b) each 
      ancestor's <STRONG>-visible</STRONG> option is true </DD></DL>
    <DT><A name=61><I class=arg>pathName</I> <B class=cmd>item delete</B> <I 
    class=arg>first</I> ?<I class=arg>last</I>?</A>
    <DD>Deletes the specified item(s). <I class=arg>First</I> and <I 
    class=arg>last</I> must be the string <STRONG>all</STRONG> or a valid <A 
    href="http://tktreectrl.sourceforge.net/treectrl.html#item_description">item 
    description</A>. If either <I class=arg>first</I> or <I class=arg>last</I> 
    is specified as <STRONG>all</STRONG>, then all items are deleted. If <I 
    class=arg>first</I> is specified and <I class=arg>last</I> isn't specified, 
    the item described by <I class=arg>first</I> is deleted. If both <I 
    class=arg>first</I> and <I class=arg>last</I> are specified, they must 
    decribe items with a common ancestor; then the range of items between <I 
    class=arg>first</I> and <I class=arg>last</I> is deleted. <BR><BR>Deleting 
    an item deletes any child items of the deleted item recursively. If the 
    current <STRONG>active</STRONG> item is deleted, the root item becomes the 
    new active item. If the current selection <STRONG>anchor</STRONG> item is 
    deleted, the root item becomes the new anchor item. There is no way to 
    delete the root item of the treectrl widget; in all cases the specification 
    of the root item is ignored. <BR><BR>For each call to this command, two 
    events may be generated. If any of the deleted items are selected, then a 
    <STRONG>&lt;Selection&gt;</STRONG> event is generated just before the items 
    are deleted. If any items were actually deleted, then an 
    <STRONG>&lt;ItemDelete&gt;</STRONG> event event is generated just before the 
    items are deleted. <BR><BR>
    <DT><A name=62><I class=arg>pathName</I> <B class=cmd>item dump</B> <I 
    class=arg>itemDesc</I></A>
    <DD>Returns a list with six elements in the form <STRONG>index</STRONG> 
    <EM>index</EM> <STRONG>indexVis</STRONG> <EM>indexVis</EM> 
    <STRONG>neededHeight</STRONG> <EM>neededHeight</EM>. <BR><BR>
    <DT><A name=63><I class=arg>pathName</I> <B class=cmd>item element</B> <I 
    class=arg>command</I> <I class=arg>itemDesc</I> <I class=arg>column</I> <I 
    class=arg>element</I> ?<I class=arg>arg ...</I>?</A>
    <DD>This command is used to manipulate elements of the item. The exact 
    behavior of the command depends on the <I class=arg>command</I> argument 
    that follows the <B class=cmd>element</B> argument. The following forms of 
    the command are supported: <BR><BR>
    <DL>
      <DT><A name=64><I class=arg>pathName</I> <B class=cmd>item element 
      actual</B> <I class=arg>itemDesc</I> <I class=arg>column</I> <I 
      class=arg>element</I> <I class=arg>option</I></A>
      <DD>Deprecated. Use <B class=cmd>item element perstate</B> instead. 
      <BR><BR>
      <DT><A name=65><I class=arg>pathName</I> <B class=cmd>item element 
      cget</B> <I class=arg>itemDesc</I> <I class=arg>column</I> <I 
      class=arg>element</I> <I class=arg>option</I></A>
      <DD>This command returns the value of the option named <I 
      class=arg>option</I> associated with <I class=arg>element</I> inside <I 
      class=arg>column</I> of the item described by <I class=arg>itemDesc</I>, 
      if it was already configured for the actual item. <I class=arg>Option</I> 
      may have any of the values accepted by the type of the specified element 
      (see <A 
      href="http://tktreectrl.sourceforge.net/treectrl.html#elements">ELEMENTS</A> 
      below) <BR><BR>
      <DT><A name=66><I class=arg>pathName</I> <B class=cmd>item element 
      configure</B> <I class=arg>itemDesc</I> <I class=arg>column</I> <I 
      class=arg>element</I> ?<I class=arg>option</I>? ?<I class=arg>value</I>? 
      ?<I class=arg>option value ...</I>?</A>
      <DD>This command is similar to the <B class=cmd>configure</B> widget 
      command except that it modifies options associated with <I 
      class=arg>element</I> inside <I class=arg>column</I> of the item described 
      by <I class=arg>itemDesc</I> instead of modifying options for the overall 
      treectrl widget. If no <I class=arg>option</I> is specified, the command 
      returns a list describing all of the available options for the element 
      (see <STRONG>Tk_ConfigureInfo</STRONG> for information on the format of 
      this list). If <I class=arg>option</I> is specified with no <I 
      class=arg>value</I>, then the command returns a list describing the one 
      named option (this list will be identical to the corresponding sublist of 
      the value returned if no <I class=arg>option</I> is specified). If one or 
      more <I class=arg>option</I>-<I class=arg>value</I> pairs are specified, 
      then the command modifies the given option(s) to have the given value(s) 
      in the <I class=arg>element</I> inside <I class=arg>column</I> of the item 
      described by <I class=arg>itemDesc</I>; in this case the command returns 
      an empty string. <BR><BR>It is possible to configure multiple elements in 
      multiple columns with a single call. To configure another element in the 
      same column, append a '<STRONG>+</STRONG>' argument followed by the 
      element name. To configure elements in another column, append a 
      '<STRONG>,</STRONG>' argument followed by the column. For example: 
      <P>
      <TABLE>
        <TBODY>
        <TR>
          <TD bgColor=black>&nbsp;</TD>
          <TD><PRE class=sample>.t item element configure $I \
	$C1 $E1 -text "hello" + $E2 -text "world" , \
	$C2 $E3 -fill Blue , \
	$C3 $E1 -text "apples and oranges"
</PRE></TD></TR></TBODY></TABLE></P><BR><BR>
      <DT><A name=67><I class=arg>pathName</I> <B class=cmd>item element 
      perstate</B> <I class=arg>itemDesc</I> <I class=arg>column</I> <I 
      class=arg>element</I> <I class=arg>option</I> ?<I 
      class=arg>stateList</I>?</A>
      <DD>This command returns the current value of the <A 
      href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
      option named <I class=arg>option</I> for <I class=arg>element</I> inside 
      <I class=arg>column</I> of the item described by <I 
      class=arg>itemDesc</I>. If <I class=arg>stateList</I> is specified, the 
      list of state names (static and dynamic, see <A 
      href="http://tktreectrl.sourceforge.net/treectrl.html#states">STATES</A>) 
      is used in place of the current state for <I class=arg>item</I> and <I 
      class=arg>column.</I> </DD></DL>
    <DT><A name=68><I class=arg>pathName</I> <B class=cmd>item expand</B> <I 
    class=arg>itemDesc</I> ?<STRONG>-recurse</STRONG>?</A>
    <DD>Switches on the <STRONG>open</STRONG> state of the item(s) described by 
    <I class=arg>itemDesc</I>. If the item has descendants, they are now 
    displayed. If the item is configured to have a button, the button will now 
    display the image or bitmap configured with the widget options 
    <STRONG>-buttonimage</STRONG> or <STRONG>-buttonbitmap</STRONG>, or a 
    <EM>-</EM> sign if no image or bitmap is configured. If the item is already 
    open, this command has no effect. <I class=arg>ItemDesc</I> may also be the 
    string <STRONG>all</STRONG>, in which case all items of the treectrl widget 
    are expanded. If <STRONG>-recurse</STRONG> is specified, all descendants of 
    <I class=arg>itemDesc</I> will also be expanded. For every item, that 
    actually will be expanded, two events are generated: an 
    <STRONG>&lt;Expand-before&gt;</STRONG> event before the item state is 
    changed, and an <STRONG>&lt;Expand-after&gt;</STRONG> event after the item 
    state was changed. <BR><BR>
    <DT><A name=69><I class=arg>pathName</I> <B class=cmd>item firstchild</B> <I 
    class=arg>parent</I> ?<I class=arg>child</I>?</A>
    <DD>If <I class=arg>child</I> is not specified, returns the item id of the 
    first child of the item described by <I class=arg>parent</I>. If <I 
    class=arg>child</I> is specified, it must described an item that is not an 
    ancestor of <I class=arg>parent</I>. Then it will become the new first child 
    of <I class=arg>parent</I>. <BR><BR>
    <DT><A name=70><I class=arg>pathName</I> <B class=cmd>item id</B> <I 
    class=arg>itemDesc</I></A>
    <DD>This command resolves the <A 
    href="http://tktreectrl.sourceforge.net/treectrl.html#item_description">item 
    description</A> <I class=arg>itemDesc</I> into a unique item identifier. If 
    the item described by <I class=arg>itemDesc</I> doesn't exist, this command 
    returns an empty string. <BR><BR>
    <DT><A name=71><I class=arg>pathName</I> <B class=cmd>item image</B> <I 
    class=arg>itemDesc</I> ?<I class=arg>column</I>? ?<I class=arg>image</I>? 
    ?<I class=arg>column image ...</I>?</A>
    <DD>This command sets or retrieves the value of the <A 
    href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
    -image option for the first image element in one or more columns. If no <I 
    class=arg>column</I> is specified, this command returns a list of values, 
    one per column. If no <I class=arg>image</I> is specified, this command 
    returns the value for <I class=arg>column</I>. If one or more <I 
    class=arg>column</I>-<I class=arg>image</I> pairs is specified, then the 
    value of the -image option in each <I class=arg>column</I> is set to <I 
    class=arg>image</I>. Note that this command is provided as a convenience. 
    Use the <B class=cmd>item element configure</B> or <B class=cmd>item element 
    cget</B> commands if you want to set or retrieve the value of the -image 
    option for a specific image element. <BR><BR>
    <DT><A name=72><I class=arg>pathName</I> <B class=cmd>item isancestor</B> <I 
    class=arg>itemDesc</I> <I class=arg>descendant</I></A>
    <DD>Returns 1 if the item described by <I class=arg>itemDesc</I> is a direct 
    or indirect parent of the item decribed by <I class=arg>descendant</I>, 0 
    otherwise. <BR><BR>
    <DT><A name=73><I class=arg>pathName</I> <B class=cmd>item isopen</B> <I 
    class=arg>itemDesc</I></A>
    <DD>Returns 1 if the item described by <I class=arg>itemDesc</I> has the 
    state <STRONG>open</STRONG> switched on, 0 otherwise. <BR><BR>
    <DT><A name=74><I class=arg>pathName</I> <B class=cmd>item lastchild</B> <I 
    class=arg>parent</I> ?<I class=arg>child</I>?</A>
    <DD>If <I class=arg>child</I> is not specified, returns the item id of the 
    last child of the item described by <I class=arg>parent</I>. If <I 
    class=arg>child</I> is specified, it must describe an item that is not an 
    ancestor of <I class=arg>parent</I>. Then it will become the new last child 
    of <I class=arg>parent</I>. <BR><BR>
    <DT><A name=75><I class=arg>pathName</I> <B class=cmd>item nextsibling</B> 
    <I class=arg>sibling</I> ?<I class=arg>next</I>?</A>
    <DD>If <I class=arg>next</I> is not specified, returns the item id of the 
    next sibling of the item described by <I class=arg>sibling</I>. If <I 
    class=arg>next</I> is specified, it must describe an item that is not an 
    ancestor of <I class=arg>sibling</I>. Then it will become the new next 
    sibling of <I class=arg>sibling</I>. <BR><BR>
    <DT><A name=76><I class=arg>pathName</I> <B class=cmd>item numchildren</B> 
    <I class=arg>itemDesc</I></A>
    <DD>Returns the number of children of the item described by <I 
    class=arg>itemDesc</I>. <BR><BR>
    <DT><A name=77><I class=arg>pathName</I> <B class=cmd>item order</B> <I 
    class=arg>itemDesc</I> ?<I class=arg>-visible</I>?</A>
    <DD>This command returns the position of the item <I class=arg>itemDesc</I> 
    relative to its toplevel ancestor (usually the root item, unless the 
    ancestor is an orphan). If you imagine all the items flattened into a 
    vertical list, the result of this command is the row the item falls in. If 
    the optional argument <I class=arg>-visible</I> is given, only the items 
    whose ancestors are expanded, and whose -visible option is true, get 
    counted; in this case -1 is returned if the item is not visible. <BR><BR>
    <DT><A name=78><I class=arg>pathName</I> <B class=cmd>item parent</B> <I 
    class=arg>itemDesc</I></A>
    <DD>Returns the item id of the parent of the item described by <I 
    class=arg>itemDesc</I>. <BR><BR>
    <DT><A name=79><I class=arg>pathName</I> <B class=cmd>item prevsibling</B> 
    <I class=arg>sibling</I> ?<I class=arg>prev</I>?</A>
    <DD>If <I class=arg>prev</I> is not specified, returns the item id of the 
    previous sibling of the item described by <I class=arg>sibling</I>. If <I 
    class=arg>prev</I> is specified, it must describe an item that is not an 
    ancestor of <I class=arg>sibling</I>. Then it will become the new previous 
    sibling of <I class=arg>sibling</I>. <BR><BR>
    <DT><A name=80><I class=arg>pathName</I> <B class=cmd>item range</B> <I 
    class=arg>first</I> <I class=arg>last</I></A>
    <DD>Returns a list containing the item ids of all items in the range between 
    <I class=arg>first</I> and <I class=arg>last</I>, inclusive. The order 
    between <I class=arg>first</I> and <I class=arg>last</I> doesn't matter, and 
    the result is always sorted by the increasing order of the items (as 
    returned by the <B class=cmd>item order</B> command). The items specified by 
    <I class=arg>first</I> and <I class=arg>last</I> must share a common 
    ancestor. <BR><BR>
    <DT><A name=81><I class=arg>pathName</I> <B class=cmd>item remove</B> <I 
    class=arg>itemDesc</I></A>
    <DD>Removes the item described by <I class=arg>itemDesc</I> from the list of 
    children of its parent, so that it will become an orphan. <BR><BR>
    <DT><A name=82><I class=arg>pathName</I> <B class=cmd>item rnc</B> <I 
    class=arg>itemDesc</I></A>
    <DD>Returns a list of two integers, which corresponds to the row and column 
    of the item described by <I class=arg>itemDesc</I>. The row and column 
    corresponds to the on-screen arrangement of items as determined by the 
    -orient and -wrap options. If the item is not displayed, this command 
    returns an empty string. <BR><BR>
    <DT><A name=83><I class=arg>pathName</I> <B class=cmd>item sort</B> <I 
    class=arg>itemDesc</I> ?<I class=arg>option ...</I>?</A>
    <DD>Sorts the children of the item described by <I class=arg>itemDesc</I>, 
    and redisplays the tree with the items in the new order. <BR><BR>The range 
    of items which should be sorted can be restricted by means of the 
    <STRONG>-first</STRONG> and/or <STRONG>-last</STRONG> options, which should 
    be children of the item described by <I class=arg>itemDesc</I>; the order 
    between these two limiting items doesn't matter. <BR><BR>The sort column can 
    be specified by means of the <STRONG>-column</STRONG> option; this option 
    can be used repeatedly to define a multicolumn sort. The sorting is done by 
    looking at the <I class=arg>text</I> of the element specified by the 
    <STRONG>-element</STRONG> option, which must be a text element defined in 
    the style of the sorting column, by default the first text element is used. 
    <BR><BR>If the <STRONG>-notreally</STRONG> option is specified, no 
    rearranging of the items is done; instead the sorted items are returned as 
    result of the command. <BR><BR>By default ASCII sorting is used with the 
    result returned in increasing order. Any of the following options may be 
    specified to control the sorting process of the previously specified column 
    (unique abbreviations are accepted): <BR><BR>
    <DL>
      <DT><STRONG><STRONG>-ascii</STRONG></STRONG>
      <DD>Use string comparison with ASCII collation order. This is the default. 
      <BR><BR>
      <DT><STRONG><STRONG>-command</STRONG></STRONG> <I class=arg>command</I>
      <DD>Use <I class=arg>command</I> as a comparison command. To compare two 
      items, evaluate a Tcl script consisting of <I class=arg>command</I> with 
      the numerical ids of the two items appended as additional arguments. The 
      script should return an integer less than, equal to, or greater than zero 
      if the first item is to be considered less than, equal to, or greater than 
      the second, respectively. <BR><BR>
      <DT><STRONG><STRONG>-decreasing</STRONG></STRONG>
      <DD>Sort the items in decreasing order ("largest" items first). <BR><BR>
      <DT><STRONG><STRONG>-dictionary</STRONG></STRONG>
      <DD>Use dictionary-style comparison. This is the same as 
      <STRONG>-ascii</STRONG> except (a) case is ignored except as a tie-breaker 
      and (b) if two strings contain embedded numbers, the numbers compare as 
      integers, not characters. For example, in <STRONG>-dictionary</STRONG> 
      mode, <EM>bigBoy</EM> sorts between <EM>bigbang</EM> and <EM>bigboy</EM>, 
      and <EM>x10y</EM> sorts between <EM>x9y</EM> and <EM>x11y</EM>. <BR><BR>
      <DT><STRONG><STRONG>-increasing</STRONG></STRONG>
      <DD>Sort the items in increasing order ("smallest" items first). This is 
      the default. <BR><BR>
      <DT><STRONG><STRONG>-integer</STRONG></STRONG>
      <DD>Convert to integers and use integer comparison. <BR><BR>
      <DT><STRONG><STRONG>-real</STRONG></STRONG>
      <DD>Convert to floating-point values and use floating comparison. </DD></DL>
    <DT><A name=84><I class=arg>pathName</I> <B class=cmd>item span</B> <I 
    class=arg>itemDesc</I> ?<I class=arg>column</I>? ?<I 
    class=arg>numColumns</I>? ?<I class=arg>column numColumns ...</I>?</A>
    <DD>This command sets or retrieves the number of columns that a style 
    covers. If no <I class=arg>column</I> is specified, the return value is a 
    list of spans, one per column. If no <I class=arg>numColumns</I> is 
    specified, the return value is the span for <I class=arg>column</I>. If one 
    or more <I class=arg>column</I>-<I class=arg>numColumns</I> pairs is 
    specified, the span for each <I class=arg>column</I> is set to <I 
    class=arg>numColumns</I>. <BR><BR>
    <DT><A name=85><I class=arg>pathName</I> <B class=cmd>item state</B> <I 
    class=arg>command</I> <I class=arg>itemDesc</I> ?<I class=arg>arg 
    ...</I>?</A>
    <DD>This command is used to manipulate the states of an item. The exact 
    behavior of the command depends on the <I class=arg>command</I> argument 
    that follows the <B class=cmd>style</B> argument. The following forms of the 
    command are supported: <BR><BR>
    <DL>
      <DT><A name=86><I class=arg>pathName</I> <B class=cmd>item state 
      forcolumn</B> <I class=arg>itemDesc</I> <I class=arg>column</I> ?<I 
      class=arg>stateDescList</I>?</A>
      <DD>Just like <B class=cmd>item state set</B> but manipulates dynamic 
      states for a single item column, not the item as a whole. If <I 
      class=arg>stateDescList</I> is unspecified, this command returns a list 
      containing the names of all the dynamic states which are switched on in <I 
      class=arg>column</I>. <BR><BR>
      <DT><A name=87><I class=arg>pathName</I> <B class=cmd>item state get</B> 
      <I class=arg>itemDesc</I> ?<I class=arg>stateName</I>?</A>
      <DD>If no <I class=arg>stateName</I> is specified, returns a list 
      containing the names of all (static and dynamic) states which are 
      currently switched on for the item described by <I class=arg>itemDesc</I>. 
      If a <I class=arg>stateName</I> is specified, 1 is returned if the 
      specified state is currently switched on for the item, 0 otherwise. 
      <BR><BR>
      <DT><A name=88><I class=arg>pathName</I> <B class=cmd>item state set</B> 
      <I class=arg>itemDesc</I> ?<I class=arg>lastItem</I>? <I 
      class=arg>stateDescList</I></A>
      <DD>Every element of <I class=arg>stateDescList</I> must be the name of a 
      dynamic state (see <A 
      href="http://tktreectrl.sourceforge.net/treectrl.html#states">STATES</A> 
      below), optionally preceded by a <STRONG>~</STRONG> or <STRONG>!</STRONG> 
      character. Every state with a leading <STRONG>!</STRONG> will be switched 
      off for the item described by <I class=arg>itemDesc</I>, every state with 
      a leading <STRONG>~</STRONG> will be toggled, and every state without 
      leading <STRONG>!</STRONG> or <STRONG>~</STRONG> will be switched on. If 
      <I class=arg>lastItem</I> is specified, the state changes will be made for 
      all items in the range betwen <I class=arg>itemDesc</I> and <I 
      class=arg>lastItem</I>. If <I class=arg>ItemDesc</I> is the string 
      <STRONG>all</STRONG>, then the state changes are made for all items of the 
      treectrl widget. </DD></DL>
    <DT><A name=89><I class=arg>pathName</I> <B class=cmd>item style</B> <I 
    class=arg>command</I> <I class=arg>itemDesc</I> ?<I class=arg>arg 
    ...</I>?</A>
    <DD>This command is used to manipulate the styles of an item. The exact 
    behavior of the command depends on the <I class=arg>command</I> argument 
    that follows the <B class=cmd>style</B> argument. The following forms of the 
    command are supported: <BR><BR>
    <DL>
      <DT><A name=90><I class=arg>pathName</I> <B class=cmd>item style 
      elements</B> <I class=arg>itemDesc</I> <I class=arg>column</I></A>
      <DD>This command returns a list containing the names of elements which 
      were configured by the <B class=cmd>item element configure</B> command for 
      the item described by <I class=arg>itemDesc</I> in <I 
      class=arg>column</I>. If there is no style assigned to <I 
      class=arg>column</I> an error is returned. <BR><BR>
      <DT><A name=91><I class=arg>pathName</I> <B class=cmd>item style map</B> 
      <I class=arg>itemDesc</I> <I class=arg>column</I> <I class=arg>style</I> 
      <I class=arg>map</I></A>
      <DD>Like the <B class=cmd>item style set</B> command, this command may be 
      used to assign a style to a specific column of an item. Unlike <B 
      class=cmd>item style set</B>, this command can transfer configuration 
      values of elements in the current style to elements in the new style 
      specified by <I class=arg>style</I>. <I class=arg>Map</I> must be a list 
      of <I class=arg>elementOld</I>-<I class=arg>elementNew</I> pairs, where <I 
      class=arg>elementOld</I> is an element in the current style, and <I 
      class=arg>elementNew</I> is an element in the style specified by <I 
      class=arg>style</I>. Both <I class=arg>elementOld</I> and <I 
      class=arg>elementNew</I> must be of the same type 
      (<STRONG>bitmap</STRONG>, <STRONG>text</STRONG> etc). <BR><BR>
      <DT><A name=92><I class=arg>pathName</I> <B class=cmd>item style set</B> 
      <I class=arg>itemDesc</I> ?<I class=arg>column</I>? ?<I 
      class=arg>style</I>? ?<I class=arg>column style ...</I>?</A>
      <DD>This command sets or retrieves the style assigned to one or more 
      columns. If no <I class=arg>column</I> is specified, this command returns 
      a list containing the names of the styles set for all columns of the item 
      described by <I class=arg>itemDesc</I>. If no <I class=arg>style</I> is 
      specified, this command returns the name of the style set for the item 
      described by <I class=arg>itemDesc</I> in <I class=arg>column</I>. If one 
      or more <I class=arg>column</I>-<I class=arg>style</I> pairs is specified, 
      then the style in each <I class=arg>column</I> is set to <I 
      class=arg>style</I>. </DD></DL>
    <DT><A name=93><I class=arg>pathName</I> <B class=cmd>item text</B> <I 
    class=arg>itemDesc</I> ?<I class=arg>column</I>? ?<I class=arg>text</I>? ?<I 
    class=arg>column text ...</I>?</A>
    <DD>This command sets or retrieves the value of the -text option for the 
    first text element in one or more columns. If no <I class=arg>column</I> is 
    specified, this command returns a list of values, one per column. If no <I 
    class=arg>text</I> is specified, this command returns the value for <I 
    class=arg>column</I>. If one or more <I class=arg>column</I>-<I 
    class=arg>text</I> pairs is specified, then the value of the -text option in 
    each <I class=arg>column</I> is set to <I class=arg>text</I>. Note that this 
    command is provided as a convenience. Use the <B class=cmd>item element 
    configure</B> or <B class=cmd>item element cget</B> commands if you want to 
    set or retrieve the value of the -text option for a specific text element. 
    <BR><BR>
    <DT><A name=94><I class=arg>pathName</I> <B class=cmd>item toggle</B> <I 
    class=arg>itemDesc</I> ?<STRONG>-recurse</STRONG>?</A>
    <DD>Changes the <STRONG>open</STRONG> state of the item(s) described by <I 
    class=arg>itemDesc</I>. If the state is currently switched off, this command 
    does the same as the <B class=cmd>item expand</B> widget command, otherwise 
    the same as the <B class=cmd>item collapse</B> widget command. <I 
    class=arg>ItemDesc</I> may also be the string <STRONG>all</STRONG>, in which 
    case the state of all items of the treectrl widget are toggled. If 
    <STRONG>-recurse</STRONG> is specified, the state of all descendants of <I 
    class=arg>itemDesc</I> will also be toggled. </DD></DL>
  <DT><A name=95><I class=arg>pathName</I> <B class=cmd>marquee</B> <I 
  class=arg>option</I> ?<I class=arg>arg ...</I>?</A>
  <DD>This command is used to manipulate the marquee, a rectangular region of 
  the treectrl widget optionally marked with a surrounding dotted line. One 
  corner point of the marquee is fixed as long as the marquee is visible and 
  called the anchor; the diagonally opposite corner is dragged with the mouse 
  while resizing the marquee and simply called the corner. All coordinates 
  handled by this widget command are treectrl coordinates, i.e. the <B 
  class=cmd>canvasx</B> or <B class=cmd>canvasy</B> widget command should be 
  used before any window coordinates can be used. The exact behavior of the 
  command depends on the <I class=arg>option</I> argument that follows the <B 
  class=cmd>marquee</B> argument. The following forms of the command are 
  supported: <BR><BR>
  <DL>
    <DT><A name=96><I class=arg>pathName</I> <B class=cmd>marquee anchor</B> ?<I 
    class=arg>x y</I>?</A>
    <DD>Returns a list containing the x and y coordinates of the anchor, if no 
    additional arguments are specified. If two coordinates are specified, sets 
    the anchor to the given coordinates <I class=arg>x</I> and <I 
    class=arg>y</I>. <BR><BR>
    <DT><A name=97><I class=arg>pathName</I> <B class=cmd>marquee cget</B> <I 
    class=arg>option</I></A>
    <DD>This command returns the current value of the marquee option named <I 
    class=arg>option</I>. <I class=arg>Option</I> may have any of the values 
    accepted by the <B class=cmd>marquee configure</B> widget command. <BR><BR>
    <DT><A name=98><I class=arg>pathName</I> <B class=cmd>marquee configure</B> 
    ?<I class=arg>option</I>? ?<I class=arg>value</I>? ?<I class=arg>option 
    value ...</I>?</A>
    <DD>This command is similar to the <B class=cmd>configure</B> widget command 
    except that it modifies the marquee options instead of modifying options for 
    the overall treectrl widget. If no <I class=arg>option</I> is specified, the 
    command returns a list describing all of the available marquee options (see 
    <STRONG>Tk_ConfigureInfo</STRONG> for information on the format of this 
    list). If <I class=arg>option</I> is specified with no <I 
    class=arg>value</I>, then the command returns a list describing the one 
    named marquee option (this list will be identical to the corresponding 
    sublist of the value returned if no <I class=arg>option</I> is specified). 
    If one or more <I class=arg>option</I>-<I class=arg>value</I> pairs are 
    specified, then the command modifies the given marquee option(s) to have the 
    given value(s); in this case the command returns an empty string. 
    <BR><BR>The following marquee options are supported: <BR><BR>
    <DL>
      <DT><STRONG><STRONG>-visible</STRONG></STRONG> <I class=arg>boolean</I>
      <DD>Specifies a boolean value which determines whether the dotted line 
      surrounding the region of the marquee should currently be visible. 
</DD></DL>
    <DT><A name=99><I class=arg>pathName</I> <B class=cmd>marquee coords</B> ?<I 
    class=arg>x1 y1 x2 y2</I>?</A>
    <DD>Returns a list containing the x and y coordinates of the anchor followed 
    by the x and y coordinates of the corner, if no additional arguments are 
    specified. If four coordinates are specified, sets the anchor to the given 
    coordinates <I class=arg>x1</I> and <I class=arg>y1</I> and the corner to 
    the coordinates <I class=arg>x2</I> and <I class=arg>y2</I>. <BR><BR>
    <DT><A name=100><I class=arg>pathName</I> <B class=cmd>marquee corner</B> 
    ?<I class=arg>x y</I>?</A>
    <DD>Returns a list containing the x and y coordinates of the corner, if no 
    additional arguments are specified. If two coordinates are specified, sets 
    the corner to the given coordinates <I class=arg>x</I> and <I 
    class=arg>y</I>. <BR><BR>
    <DT><A name=101><I class=arg>pathName</I> <B class=cmd>marquee 
    identify</B></A>
    <DD>Returns a list with information about the items inside the marquee. The 
    list has as elements a list itself for every item which is displayed inside 
    the marquee. The first element of these lists is the numerical item id, 
    followed by another list with information about every column of the item 
    inside the marque. These lists start with the column number, followed by the 
    elements of the style defined for the item in this column if there are any. 
    </DD></DL>
  <DT><A name=102><I class=arg>pathName</I> <B class=cmd>notify</B> <I 
  class=arg>option</I> ?<I class=arg>arg ...</I>?</A>
  <DD>Many Tk widgets communicate with the outside world via 
  <STRONG>-command</STRONG> callbacks and/or virtual events. For example, the 
  Text widget evaluates its <STRONG>-yscrollcommand</STRONG> when the view in 
  the widget changes, and generates a &lt;&lt;Modified&gt;&gt; virtual event 
  when text is inserted or deleted. A treectrl widget replaces both methods of 
  communication with its own event mechanism accessed through the <B 
  class=cmd>notify</B> subcommands. <BR><BR>The exact behavior of the command 
  depends on the <I class=arg>option</I> argument that follows the <B 
  class=cmd>notify</B> argument. The following forms of the command are 
  supported: <BR><BR>
  <DL>
    <DT><A name=103><I class=arg>pathName</I> <B class=cmd>notify bind</B> ?<I 
    class=arg>object</I>? ?<I class=arg>pattern</I>? ?+??<I 
    class=arg>script</I>?</A>
    <DD>This command associates Tcl scripts with events generated by a treectrl 
    widget. If all three arguments are specified, <B class=cmd>notify bind</B> 
    will arrange for <I class=arg>script</I> (a Tcl script) to be evaluated 
    whenever the event(s) specified by <I class=arg>pattern</I> are generated by 
    this treectrl widget. If <I class=arg>script</I> is prefixed with a "+", 
    then it is appended to any existing binding for <I class=arg>pattern</I>; 
    otherwise <I class=arg>script</I> replaces any existing binding. If <I 
    class=arg>script</I> is an empty string then the current binding for <I 
    class=arg>pattern</I> is destroyed, leaving <I class=arg>pattern</I> 
    unbound. In all of the cases where a script argument is provided, <B 
    class=cmd>notify bind</B> returns an empty string. <BR><BR>If <I 
    class=arg>pattern</I> is specified without a <I class=arg>script</I>, then 
    the script currently bound to <I class=arg>pattern</I> is returned, or an 
    empty string is returned if there is no binding for <I 
    class=arg>pattern</I>. If neither <I class=arg>pattern</I> nor <I 
    class=arg>script</I> is specified, then the return value is a list whose 
    elements are all the patterns for which there exist bindings for <I 
    class=arg>object</I>. <BR><BR>The <I class=arg>object</I> argument 
    determines which window(s) the binding applies to. If <I 
    class=arg>object</I> begins with a dot, as in .a.b.c, then it must be the 
    path name for a window; otherwise it may be an arbitrary string. Like the 
    regular <B class=cmd>bind</B> command, bindings on window names are 
    automatically removed if that window is destroyed. <BR><BR>
    <DT><A name=104><I class=arg>pathName</I> <B class=cmd>notify configure</B> 
    <I class=arg>object</I> <I class=arg>pattern</I> ?<I class=arg>option</I>? 
    ?<I class=arg>value</I>? ?<I class=arg>option value ...</I>?</A>
    <DD>This command sets and retrieves options for bindings created by the <B 
    class=cmd>notify bind</B> command. <BR><BR>If no <I class=arg>option</I> is 
    specified, the command returns a list with <I class=arg>option</I>-<I 
    class=arg>value</I> pairs describing all the available binding options for 
    <I class=arg>pattern</I> on <I class=arg>object</I>. If <I 
    class=arg>option</I> is specified with no <I class=arg>value</I>, then the 
    command returns the current value of that option. If one or more <I 
    class=arg>option</I>-<I class=arg>value</I> pairs are specified, then the 
    command modifies the given option(s) to have the given value(s) for the 
    binding; in this case the command returns an empty string. <BR><BR>The 
    following binding options are supported: <BR><BR>
    <DL>
      <DT><STRONG><STRONG>-active</STRONG></STRONG> <I class=arg>boolean</I>
      <DD>Specifies if the binding should be active. As long as this option is 
      specified as false, a binding script will not be evaluated when the 
      corresponding event is generated. </DD></DL>
    <DT><A name=105><I class=arg>pathName</I> <B class=cmd>notify 
    detailnames</B> <I class=arg>eventName</I></A>
    <DD>Returns a list containing the names of all details, which are installed 
    for the event with the name <I class=arg>eventName</I> by means of the <B 
    class=cmd>notify install</B> widget command or by the treectrl widget 
    itself. <BR><BR>
    <DT><A name=106><I class=arg>pathName</I> <B class=cmd>notify 
    eventnames</B></A>
    <DD>Returns a list containing the names of all events, which are installed 
    by means of the <B class=cmd>notify install</B> widget command or by the 
    treectrl widget itself. <BR><BR>
    <DT><A name=107><I class=arg>pathName</I> <B class=cmd>notify generate</B> 
    <I class=arg>pattern</I> ?<I class=arg>charMap</I>? ?<I 
    class=arg>percentsCommand</I>?</A>
    <DD>This command causes the treectrl widget to generate an event. This 
    command is typically used to generate dynamic events created by the <B 
    class=cmd>notify install</B> command, but may be used to generate static 
    events also. The event specified by <I class=arg>pattern</I> is generated, 
    and any active binding scripts on the event are evaluated after undergoing 
    %-substitution. If there are details defined for the event, <I 
    class=arg>pattern</I> must describe an &lt;<I class=arg>eventName</I>-<I 
    class=arg>detail</I>&gt; pair, otherwise <I class=arg>pattern</I> should be 
    &lt;<I class=arg>eventName</I>&gt;. <BR><BR>The optional <I 
    class=arg>charMap</I> is a list of <I class=arg>char</I>-<I 
    class=arg>value</I> pairs as in the form returned by <B class=cmd>array 
    get</B>. Each <I class=arg>char</I> has to be exactly one character. The <I 
    class=arg>charMap</I> is used in %-substitution. <BR><BR>If <I 
    class=arg>percentsCommand</I> is specified, then it will be used to perform 
    %-substitution on any scripts bound to the event. If <I 
    class=arg>percentsCommand</I> is not specified and the event is dynamic, 
    then the %-subtitution command passed to <B class=cmd>notify install</B> 
    will be used if it was provided. If the event is static or no %-substitution 
    command is available, then all %-substitution is done using <I 
    class=arg>charMap</I> only . See <B class=cmd>notify install</B> for a 
    description of <I class=arg>percentsCommand</I>. <BR><BR>
    <DT><A name=108><I class=arg>pathName</I> <B class=cmd>notify install</B> <I 
    class=arg>pattern</I> ?<I class=arg>percentsCommand</I>?</A>
    <DD>This command installs a new event or detail specified by <I 
    class=arg>pattern</I>. Events created by this command are called dynamic, 
    whereas events created by the treectrl widget itself are called static. This 
    command may be called to set or retrieve the <I 
    class=arg>percentsCommand</I> for an existing dynamic event. <BR><BR>The 
    optional <I class=arg>percentsCommand</I> is a list containing the name of a 
    Tcl command, plus any optional arguments, to which five additional arguments 
    will be appended. The command will be called to perform %-substitution on 
    any scripts bound to the event specified by <I class=arg>pattern</I> (see <A 
    href="http://tktreectrl.sourceforge.net/treectrl.html#events_and_script_substitutions">EVENTS 
    AND SCRIPT SUBSTITUTIONS</A>). <I class=arg>PercentsCommand</I> should be 
    defined as follows: 
    <P>
    <TABLE>
      <TBODY>
      <TR>
        <TD bgColor=black>&nbsp;</TD>
        <TD><PRE class=sample>proc percentsCommand {?arg arg ...? char object event detail charMap} {
	switch -- $char {
		...
	}
	return $value
}
</PRE></TD></TR></TBODY></TABLE></P>The optional <I class=arg>arg</I> 
    arguments are part of the <I class=arg>percentsCommand</I> list. <I 
    class=arg>Char</I> is the %-character to be substituted. <I 
    class=arg>Object</I> is the same as the argument to <B class=cmd>notify 
    bind</B>. <I class=arg>Event</I> and <I class=arg>detail</I> specify the 
    event. <I class=arg>CharMap</I> is the same as the argument to <B 
    class=cmd>notify generate</B>. <I class=arg>PercentsCommand</I> should 
    return the value to replace the %-character by. If an error occurs 
    evaluating <I class=arg>percentsCommand</I>, the %-character is replaced by 
    itself. <BR><BR><B class=cmd>notify install</B> returns the current <I 
    class=arg>percentsCommand</I> for the event, or an error if the event is not 
    dynamic. <BR><BR>
    <DT><A name=109><I class=arg>pathName</I> <B class=cmd>notify install 
    detail</B> <I class=arg>eventName</I> <I class=arg>detail</I> ?<I 
    class=arg>percentsCommand</I>?</A>
    <DD>Deprecated. Use <B class=cmd>notify install</B> with a <I 
    class=arg>pattern</I> of &lt;<I class=arg>eventName</I>-<I 
    class=arg>detail</I>&gt; instead. <BR><BR>
    <DT><A name=110><I class=arg>pathName</I> <B class=cmd>notify install 
    event</B> <I class=arg>eventName</I> ?<I class=arg>percentsCommand</I>?</A>
    <DD>Deprecated. Use <B class=cmd>notify install</B> with a <I 
    class=arg>pattern</I> of &lt;<I class=arg>eventName</I>&gt; instead. 
<BR><BR>
    <DT><A name=111><I class=arg>pathName</I> <B class=cmd>notify linkage</B> <I 
    class=arg>pattern</I></A>
    <DD>Returns a string indicating whether the specified event or detail is 
    created by means of the <B class=cmd>notify install</B> widget command 
    (<STRONG>dynamic</STRONG>) or by the treectrl widget itself 
    (<STRONG>static</STRONG>). <BR><BR>
    <DT><A name=112><I class=arg>pathName</I> <B class=cmd>notify linkage</B> <I 
    class=arg>eventName</I> ?<I class=arg>detail</I>?</A>
    <DD>Deprecated. Use <B class=cmd>notify linkage</B> with a <I 
    class=arg>pattern</I> of &lt;<I class=arg>eventName</I>&gt; or &lt;<I 
    class=arg>eventName</I>-<I class=arg>detail</I>&gt; instead. <BR><BR>
    <DT><A name=113><I class=arg>pathName</I> <B class=cmd>notify unbind</B> <I 
    class=arg>object</I> ?<I class=arg>pattern</I>?</A>
    <DD>If no <I class=arg>pattern</I> is specified, all bindings on <I 
    class=arg>object</I> are removed. If <I class=arg>pattern</I> is specified, 
    then the current binding for <I class=arg>pattern</I> is destroyed, leaving 
    <I class=arg>pattern</I> unbound. <BR><BR>
    <DT><A name=114><I class=arg>pathName</I> <B class=cmd>notify uninstall</B> 
    <I class=arg>pattern</I></A>
    <DD>If the event or detail specified by <I class=arg>pattern</I> is static 
    (i.e. created by the treectrl widget itself), an error is generated. 
    Otherwise the dynamic event or detail is removed. If an event name is 
    specified without a detail, all details for that event are also removed. 
    <BR><BR>
    <DT><A name=115><I class=arg>pathName</I> <B class=cmd>notify uninstall 
    detail</B> <I class=arg>eventName</I> <I class=arg>detail</I></A>
    <DD>Deprecated. Use <B class=cmd>notify uninstall</B> with a <I 
    class=arg>pattern</I> of &lt;<I class=arg>eventName</I>-<I 
    class=arg>detail</I>&gt; instead. <BR><BR>
    <DT><A name=116><I class=arg>pathName</I> <B class=cmd>notify uninstall 
    event</B> <I class=arg>eventName</I></A>
    <DD>Deprecated. Use <B class=cmd>notify uninstall</B> with a <I 
    class=arg>pattern</I> of &lt;<I class=arg>eventName</I>&gt; instead. 
</DD></DL>
  <DT><A name=117><I class=arg>pathName</I> <B class=cmd>numcolumns</B></A>
  <DD>Deprecated. Use the <B class=cmd>column count</B> command instead. 
<BR><BR>
  <DT><A name=118><I class=arg>pathName</I> <B class=cmd>numitems</B></A>
  <DD>Deprecated. Use the <B class=cmd>item count</B> command instead. <BR><BR>
  <DT><A name=119><I class=arg>pathName</I> <B class=cmd>orphans</B></A>
  <DD>Returns a list containing the item ids of all items which have no parent. 
  When an item is created, it has no parent by default, and can later become an 
  orphan by means of the <B class=cmd>item remove</B> widget command. The root 
  item is not returned. <BR><BR>
  <DT><A name=120><I class=arg>pathName</I> <B class=cmd>range</B> <I 
  class=arg>first</I> <I class=arg>last</I></A>
  <DD>Deprecated. Use the <B class=cmd>item range</B> command instead. <BR><BR>
  <DT><A name=121><I class=arg>pathName</I> <B class=cmd>state</B> <I 
  class=arg>option</I> ?<I class=arg>stateName</I>?</A>
  <DD>This command is used to manipulate the list of user-defined states, see 
  section <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#states">STATES</A> 
  below. The exact behavior of the command depends on the <I 
  class=arg>option</I> argument that follows the <B class=cmd>state</B> 
  argument. The following forms of the command are supported: <BR><BR>
  <DL>
    <DT><A name=122><I class=arg>pathName</I> <B class=cmd>state define</B> <I 
    class=arg>stateName</I></A>
    <DD>Defines a new state with the name <I class=arg>stateName</I>, which must 
    not be the name of an existing state. <BR><BR>
    <DT><A name=123><I class=arg>pathName</I> <B class=cmd>state linkage</B> <I 
    class=arg>stateName</I></A>
    <DD>Returns a string indicating whether the specified state is user-defined 
    by means of the <B class=cmd>state define</B> widget command 
    (<STRONG>dynamic</STRONG>) or predefined by the treectrl widget itself 
    (<STRONG>static</STRONG>). <BR><BR>
    <DT><A name=124><I class=arg>pathName</I> <B class=cmd>state names</B></A>
    <DD>Returns a list containing the names of all user-defined states. <BR><BR>
    <DT><A name=125><I class=arg>pathName</I> <B class=cmd>state undefine</B> 
    ?<I class=arg>stateName ...</I>?</A>
    <DD>Every <I class=arg>stateName</I> must be the name of a user-defined 
    state. Removes this state from the list of user-defined states. </DD></DL>
  <DT><A name=126><I class=arg>pathName</I> <B class=cmd>see</B> <I 
  class=arg>itemDesc</I></A>
  <DD>Adjust the view in the treectrl so that the item described by <I 
  class=arg>itemDesc</I> is visible. If the item is already visible then the 
  command has no effect; otherwise the treectrl scrolls to bring the item into 
  view, and the corresponding <STRONG>&lt;Scroll-x&gt;</STRONG> and/or 
  <STRONG>&lt;Scroll-y&gt;</STRONG> events are generated. <BR><BR>
  <DT><A name=127><I class=arg>pathName</I> <B class=cmd>selection</B> <I 
  class=arg>option</I> <I class=arg>arg</I></A>
  <DD>This command is used to adjust the selection within a treectrl. It has 
  several forms, depending on <I class=arg>option</I>: <BR><BR>
  <DL>
    <DT><A name=128><I class=arg>pathName</I> <B class=cmd>selection add</B> <I 
    class=arg>first</I> ?<I class=arg>last</I>?</A>
    <DD><I class=arg>First</I> and <I class=arg>last</I> (if specified) must be 
    the string <STRONG>all</STRONG> or a valid <A 
    href="http://tktreectrl.sourceforge.net/treectrl.html#item_description">item 
    description</A>. Adds every unselected item in the range between <I 
    class=arg>first</I> and <I class=arg>last</I>, inclusive, to the selection 
    without affecting the selection state of items outside that range. If one of 
    the arguments is the string <STRONG>all</STRONG>, every unselected item in 
    the treectrl widget is added to the selection. A 
    <STRONG>&lt;Selection&gt;</STRONG> event is generated if any items were 
    added to the selection. <BR><BR>
    <DT><A name=129><I class=arg>pathName</I> <B class=cmd>selection anchor</B> 
    ?<I class=arg>itemDesc</I>?</A>
    <DD>If <I class=arg>itemDesc</I> is specified, the selection anchor is set 
    to the described item. The selection anchor is the end of the selection that 
    is fixed while dragging out a selection with the mouse. The item description 
    <STRONG>anchor</STRONG> may be used to refer to the anchor item. This 
    command doesn't modify the selection state of any item. Returns the 
    numerical id of the selection anchor item. <BR><BR>
    <DT><A name=130><I class=arg>pathName</I> <B class=cmd>selection clear</B> 
    ?<I class=arg>first</I>? ?<I class=arg>last</I>?</A>
    <DD><I class=arg>First</I> and <I class=arg>last</I> (if specified) must be 
    the string <STRONG>all</STRONG> or a valid <A 
    href="http://tktreectrl.sourceforge.net/treectrl.html#item_description">item 
    description</A>. If any of the items between <I class=arg>first</I> and <I 
    class=arg>last</I> (inclusive) are selected, they are deselected. The 
    selection state is not changed for items outside this range. If no 
    additional arguments are given, or if one of the arguments is the string 
    <STRONG>all</STRONG>, then all items are removed from the selection. A 
    <STRONG>&lt;Selection&gt;</STRONG> event is generated if any items were 
    removed from the selection. <BR><BR>
    <DT><A name=131><I class=arg>pathName</I> <B class=cmd>selection 
    count</B></A>
    <DD>Returns an integer indicating the number of items in the treectrl that 
    are currently selected. <BR><BR>
    <DT><A name=132><I class=arg>pathName</I> <B class=cmd>selection get</B></A>
    <DD>Returns a list containing the item ids of all of the items in the 
    treectrl that are currently selected. If there are no items selected in the 
    treectrl then an empty string is returned. <BR><BR>
    <DT><A name=133><I class=arg>pathName</I> <B class=cmd>selection 
    includes</B> <I class=arg>itemDesc</I></A>
    <DD>Returns 1 if the item described by <I class=arg>itemDesc</I> is 
    currently selected, 0 if it isn't. <BR><BR>
    <DT><A name=134><I class=arg>pathName</I> <B class=cmd>selection modify</B> 
    <I class=arg>select</I> <I class=arg>deselect</I></A>
    <DD>Both arguments <I class=arg>select</I> and <I class=arg>deselect</I> 
    must be the string <STRONG>all</STRONG> or a possibly-empty list of <A 
    href="http://tktreectrl.sourceforge.net/treectrl.html#item_description">item 
    descriptions</A>. Any unselected items in <I class=arg>select</I> are added 
    to the selection, and any selected items in <I class=arg>deselect</I> are 
    removed from the selection (except for those items which are also in <I 
    class=arg>select</I>). A <STRONG>&lt;Selection&gt;</STRONG> event is 
    generated if any items were selected or deselected. </DD></DL>
  <DT><A name=135><I class=arg>pathName</I> <B class=cmd>style</B> <I 
  class=arg>option</I> ?<I class=arg>element</I>? ?<I class=arg>arg arg 
  ...</I>?</A>
  <DD>This command is used to manipulate styles, which can be thought of as a 
  geometry manager for elements. The exact behavior of the command depends on 
  the <I class=arg>option</I> argument that follows the <B class=cmd>style</B> 
  argument. The following forms of the command are supported: <BR><BR>
  <DL>
    <DT><A name=136><I class=arg>pathName</I> <B class=cmd>style cget</B> <I 
    class=arg>style</I> <I class=arg>option</I></A>
    <DD>This command returns the current value of the option named <I 
    class=arg>option</I> associated with the style given by <I 
    class=arg>style</I>. <I class=arg>Option</I> may have any of the values 
    accepted by the <B class=cmd>style configure</B> widget command. <BR><BR>
    <DT><A name=137><I class=arg>pathName</I> <B class=cmd>style configure</B> 
    <I class=arg>style</I> ?<I class=arg>option</I>? ?<I class=arg>value</I>? 
    ?<I class=arg>option value ...</I>?</A>
    <DD>This command is similar to the <B class=cmd>configure</B> widget command 
    except that it modifies options associated with the style given by <I 
    class=arg>style</I> instead of modifying options for the overall treectrl 
    widget. If no <I class=arg>option</I> is specified, the command returns a 
    list describing all of the available options for <I class=arg>style</I> (see 
    <STRONG>Tk_ConfigureInfo</STRONG> for information on the format of this 
    list). If <I class=arg>option</I> is specified with no <I 
    class=arg>value</I>, then the command returns a list describing the one 
    named option (this list will be identical to the corresponding sublist of 
    the value returned if no <I class=arg>option</I> is specified). If one or 
    more <I class=arg>option</I>-<I class=arg>value</I> pairs are specified, 
    then the command modifies the given option(s) to have the given value(s) in 
    <I class=arg>style</I>; in this case the command returns an empty string. 
    <BR><BR>The options of a style have effect on all elements managed by the 
    style. The following options are supported: <BR><BR>
    <DL>
      <DT><STRONG><STRONG>-orient</STRONG></STRONG> <I class=arg>varName</I>
      <DD>This option specifies which orientation should be used when laying out 
      the elements associated with this style. Must be either 
      <STRONG>horizontal</STRONG> (the default) or <STRONG>vertical</STRONG> or 
      an abbreviation of one of these. </DD></DL>
    <DT><A name=138><I class=arg>pathName</I> <B class=cmd>style create</B> <I 
    class=arg>style</I> ?<I class=arg>option value ...</I>?</A>
    <DD>Create a new style in <I class=arg>pathName</I> with name <I 
    class=arg>style</I>. After <I class=arg>style</I> there may be any number of 
    <I class=arg>option</I>-<I class=arg>value</I> pairs, each of which sets one 
    of the configuration options for the style. These same <I 
    class=arg>option</I>-<I class=arg>value</I> pairs may be used in <B 
    class=cmd>style configure</B> widget commands to change the style's 
    configuration. Returns the name of the new style. <BR><BR>
    <DT><A name=139><I class=arg>pathName</I> <B class=cmd>style delete</B> ?<I 
    class=arg>style ...</I>?</A>
    <DD>Deletes each of the named styles and returns an empty string. If a style 
    is deleted while it is still used to display one or more items, it is also 
    removed from the style list of these items. <BR><BR>
    <DT><A name=140><I class=arg>pathName</I> <B class=cmd>style elements</B> <I 
    class=arg>style</I> ?<I class=arg>elementList</I>?</A>
    <DD>Specifies the elements which should be layed out by this style. Each 
    element of <I class=arg>elementList</I> must be the name of an element 
    created by the widget command <B class=cmd>element create</B>. Duplicate 
    names in <I class=arg>elementList</I> are ignored. An element which was 
    specified in a former call of this command for <I class=arg>style</I> but is 
    not included in <I class=arg>elementList</I>, will be deleted from the 
    elements layed out by <I class=arg>style</I>. <BR><BR>If the <I 
    class=arg>elementList</I> argument is not specified, a list is returned 
    containing the currently defined elements of <I class=arg>style</I>. 
<BR><BR>
    <DT><A name=141><I class=arg>pathName</I> <B class=cmd>style layout</B> <I 
    class=arg>style</I> <I class=arg>element</I> ?<I class=arg>option</I>? ?<I 
    class=arg>value</I>? ?<I class=arg>option value ...</I>?</A>
    <DD>This command is similar to the <B class=cmd>configure</B> widget command 
    except that it modifies options used by <I class=arg>style</I> for laying 
    out <I class=arg>element</I> instead of modifying options for the overall 
    treectrl widget. If no <I class=arg>option</I> is specified, the command 
    returns a list with <I class=arg>option</I>-<I class=arg>value</I> pairs 
    describing all of the available options for the layout. If <I 
    class=arg>option</I> is specified with no <I class=arg>value</I>, then the 
    command returns the value of the named option. If one or more <I 
    class=arg>option</I>-<I class=arg>value</I> pairs are specified, then the 
    command modifies the given option(s) to have the given value(s) for the 
    layout; in this case the command returns an empty string. <BR><BR>The 
    options of a layout have effect on exactly the one element <I 
    class=arg>element</I> managed by <I class=arg>style</I>. The following 
    options are supported: <BR><BR>
    <DL>
      <DT><STRONG><STRONG>-detach</STRONG></STRONG> <I class=arg>boolean</I>
      <DD>Specifies whether the element should be positioned by itself, i.e. 
      independent from the other elements. <BR><BR>
      <DT><STRONG><STRONG>-expand</STRONG></STRONG> <I class=arg>flags</I>
      <DD>This option allows the external padding around the element to increase 
      when a style has more screen space than it needs. <I class=arg>Flags</I> 
      is a string that contains zero or more of the characters 
      <STRONG>n</STRONG>, <STRONG>s</STRONG>, <STRONG>w</STRONG> or 
      <STRONG>e</STRONG>. Each letter refers to the padding on the top, bottom, 
      left, or right that should be allowed to increase. This option is 
      typically used to justify an element. <BR><BR>
      <DT><STRONG><STRONG>-iexpand</STRONG></STRONG> <I class=arg>flags</I>
      <DD>This option allows the internal padding of the element and the display 
      area of the element to increase when a style has more screen space than it 
      needs. <I class=arg>Flags</I> is a string that contains zero or more of 
      the characters <STRONG>x</STRONG>, <STRONG>y</STRONG>, <STRONG>n</STRONG>, 
      <STRONG>s</STRONG>, <STRONG>w</STRONG> or <STRONG>e</STRONG>. For 
      <STRONG>n</STRONG>, <STRONG>s</STRONG>, <STRONG>w</STRONG> and 
      <STRONG>e</STRONG>, each letter refers to the padding on the top, bottom, 
      left, or right that should be allowed to increase. For <STRONG>x</STRONG> 
      and <STRONG>y</STRONG>, each letter refers to the horizontal and vertical 
      screen space the element can display itself in (i.e., the space between 
      the padding). Note that if the <STRONG>-union</STRONG> option is specified 
      for this element, then the <STRONG>x</STRONG> and <STRONG>y</STRONG> flags 
      have no effect, since the size of an element with <STRONG>-union</STRONG> 
      layout is determined by the elements it surrounds. <BR><BR>
      <DT><STRONG><STRONG>-indent</STRONG></STRONG> <I class=arg>boolean</I>
      <DD>Specifies whether the element should be positioned to the right of the 
      button/line area in the tree column. This option is ignored unless the 
      <STRONG>-detach</STRONG> option is true. <BR><BR>
      <DT><STRONG><STRONG>-ipadx</STRONG></STRONG> <I class=arg>amount</I>
      <DD>
      <DT><STRONG><STRONG>-ipady</STRONG></STRONG> <I class=arg>amount</I>
      <DD><I class=arg>Amount</I> specifies how much internal padding to leave 
      on the left and right (for <STRONG>-ipadx</STRONG>) or top and bottom (for 
      <STRONG>-ipady</STRONG>) side of the element. <I class=arg>Amount</I> may 
      be a list of two values to specify padding for the two sides separately, 
      it defaults to 0. <BR><BR>
      <DT><STRONG><STRONG>-minheight</STRONG></STRONG> <I class=arg>pixels</I>
      <DD>
      <DT><STRONG><STRONG>-height</STRONG></STRONG> <I class=arg>pixels</I>
      <DD>
      <DT><STRONG><STRONG>-maxheight</STRONG></STRONG> <I class=arg>pixels</I>
      <DD>Specifies the minimum, fixed, and maximum height of the element. 
      <BR><BR>
      <DT><STRONG><STRONG>-minwidth</STRONG></STRONG> <I class=arg>pixels</I>
      <DD>
      <DT><STRONG><STRONG>-width</STRONG></STRONG> <I class=arg>pixels</I>
      <DD>
      <DT><STRONG><STRONG>-maxwidth</STRONG></STRONG> <I class=arg>pixels</I>
      <DD>Specifies the minimum, fixed, and maximum width of the element. 
      <BR><BR>
      <DT><STRONG><STRONG>-padx</STRONG></STRONG> <I class=arg>amount</I>
      <DD>
      <DT><STRONG><STRONG>-pady</STRONG></STRONG> <I class=arg>amount</I>
      <DD><I class=arg>Amount</I> specifies how much external padding to leave 
      on the left and right (for <STRONG>-padx</STRONG>) or top and bottom (for 
      <STRONG>-pady</STRONG>) side of the element. <I class=arg>Amount</I> may 
      be a list of two values to specify padding for the two sides separately, 
      it defaults to 0. <BR><BR>
      <DT><STRONG><STRONG>-squeeze</STRONG></STRONG> <I class=arg>flags</I>
      <DD>This option allows the display area of an element to decrease when a 
      style has less space than it needs. <I class=arg>Flags</I> is a string 
      that contains zero or more of the characters <STRONG>x</STRONG> or 
      <STRONG>y</STRONG>. <STRONG>x</STRONG> allows display area to decrease 
      horizontally, <STRONG>y</STRONG> allows display area to decrease 
      vertically. This option is typically used for <STRONG>text</STRONG> 
      elements and will cause the text element to display an ellipsis (...) 
      and/or wrap lines. <BR><BR>
      <DT><STRONG><STRONG>-sticky</STRONG></STRONG> <I class=arg>flags</I>
      <DD>This option controls how the actual display information (image, text, 
      etc) of an element is positioned (or stretched) within its display area. 
      <I class=arg>Flags</I> is a string that contains zero or more of the 
      characters <STRONG>n</STRONG>, <STRONG>s</STRONG>, <STRONG>w</STRONG> or 
      <STRONG>e</STRONG>. Each letter refers to the top, bottom, left or right 
      side of the display area that the display information should "stick" to. 
      <BR><BR>
      <DT><STRONG><STRONG>-union</STRONG></STRONG> <I class=arg>elementList</I>
      <DD>Specifies a list of other elements which this element will surround. 
      The size of an element with <STRONG>-union</STRONG> layout is determined 
      by the size and position of the elements in <I class=arg>elementList</I>. 
      The <STRONG>-ipadx</STRONG> and <STRONG>-ipady</STRONG> options in this 
      case refer to the distance of the edges of the display area of this 
      element from those elements it surrounds. This option is typically used to 
      display a selection rectangle around a piece of text. </DD></DL>
    <DT><A name=142><I class=arg>pathName</I> <B class=cmd>style names</B></A>
    <DD>Returns a list containing the names of all existing styles. </DD></DL>
  <DT><A name=143><I class=arg>pathName</I> <B class=cmd>toggle</B> 
  ?<STRONG>-recurse</STRONG>? ?<I class=arg>itemDesc ...</I>?</A>
  <DD>Use <B class=cmd>item toggle</B> instead. <BR><BR>
  <DT><A name=144><I class=arg>pathName</I> <B class=cmd>xview</B> ?<I 
  class=arg>args</I>?</A>
  <DD>This command is used to query and change the horizontal position of the 
  information displayed in the treectrl's window. It can take any of the 
  following forms: <BR><BR>
  <DL>
    <DT><A name=145><I class=arg>pathName</I> <B class=cmd>xview</B></A>
    <DD>Returns a list containing two elements. Each element is a real fraction 
    between 0 and 1; together they describe the horizontal span that is visible 
    in the window. For example, if the first element is .2 and the second 
    element is .6, 20% of the tree's area is off-screen to the left, the middle 
    40% is visible in the window, and 40% of the tree is off-screen to the 
    right. These are the same values passed to scrollbars via the 
    <STRONG>-xscrollcommand</STRONG> option. <BR><BR>
    <DT><A name=146><I class=arg>pathName</I> <B class=cmd>xview moveto</B> <I 
    class=arg>fraction</I></A>
    <DD>Adjusts the view in the window so that <I class=arg>fraction</I> of the 
    total width of the tree is off-screen to the left. <I class=arg>Fraction</I> 
    must be a fraction between 0 and 1. A <STRONG>&lt;Scroll-x&gt;</STRONG> 
    event is generated. <BR><BR>
    <DT><A name=147><I class=arg>pathName</I> <B class=cmd>xview scroll</B> <I 
    class=arg>number</I> <I class=arg>what</I></A>
    <DD>This command shifts the view in the window left or right according to <I 
    class=arg>number</I> and <I class=arg>what</I>. <I class=arg>Number</I> must 
    be an integer. <I class=arg>What</I> must be either <STRONG>units</STRONG> 
    or <STRONG>pages</STRONG> or an abbreviation of one of these. If <I 
    class=arg>what</I> is <STRONG>units</STRONG>, the view adjusts left or right 
    in units of the <STRONG>-xscrollincrement</STRONG> option, if it is greater 
    than zero, or in units of one-tenth the window's width otherwise. If <I 
    class=arg>what</I> is <STRONG>pages</STRONG> then the view adjusts in units 
    of nine-tenths the window's width. If <I class=arg>number</I> is negative 
    then information farther to the left becomes visible; if it is positive then 
    information farther to the right becomes visible. A 
    <STRONG>&lt;Scroll-x&gt;</STRONG> event is generated. </DD></DL>
  <DT><A name=148><I class=arg>pathName</I> <B class=cmd>yview</B> ?<I 
  class=arg>args</I>?</A>
  <DD>This command is used to query and change the vertical position of the 
  information displayed in the treectrl's window. It can take any of the 
  following forms: <BR><BR>
  <DL>
    <DT><A name=149><I class=arg>pathName</I> <B class=cmd>yview</B></A>
    <DD>Returns a list containing two elements. Each element is a real fraction 
    between 0 and 1; together they describe the vertical span that is visible in 
    the window. For example, if the first element is .6 and the second element 
    is 1.0, the lowest 40% of the tree's area is visible in the window. These 
    are the same values passed to scrollbars via the 
    <STRONG>-yscrollcommand</STRONG> option. <BR><BR>
    <DT><A name=150><I class=arg>pathName</I> <B class=cmd>yview moveto</B> <I 
    class=arg>fraction</I></A>
    <DD>Adjusts the view in the window so that <I class=arg>fraction</I> of the 
    tree's area is off-screen to the top. <I class=arg>Fraction</I> is a 
    fraction between 0 and 1. A <STRONG>&lt;Scroll-y&gt;</STRONG> event is 
    generated. <BR><BR>
    <DT><A name=151><I class=arg>pathName</I> <B class=cmd>yview scroll</B> <I 
    class=arg>number</I> <I class=arg>what</I></A>
    <DD>This command adjusts the view in the window up or down according to <I 
    class=arg>number</I> and <I class=arg>what</I>. <I class=arg>Number</I> must 
    be an integer. <I class=arg>What</I> must be either <STRONG>units</STRONG> 
    or <STRONG>pages</STRONG>. If <I class=arg>what</I> is 
    <STRONG>units</STRONG>, the view adjusts up or down in units of the 
    <STRONG>-yscrollincrement</STRONG> option, if it is greater than zero, or in 
    units of one-tenth the window's height otherwise. If <I class=arg>what</I> 
    is <STRONG>pages</STRONG> then the view adjusts in units of nine-tenths the 
    window's height. If <I class=arg>number</I> is negative then higher 
    information becomes visible; if it is positive then lower information 
    becomes visible. A <STRONG>&lt;Scroll-y&gt;</STRONG> event is generated. 
    </DD></DL></DD></DL>
<H2><A name=columns>COLUMNS</A></H2>
<P>A treectrl widget is capable of displaying multiple columns next to each 
other. An item can be considered as a row, which reaches over all columns. 
<P>Columns in a treectrl may be specified in a number of ways. See <A 
href="http://tktreectrl.sourceforge.net/treectrl.html#column_description">COLUMN 
DESCRIPTION</A> below. 
<P>There is always one special column, the <STRONG>tail</STRONG> column, which 
fills all space to the right of the last ordinary column. This column has no 
number; it can only be specified by its tag <STRONG>tail</STRONG>, which cannot 
be modified. 
<P>When a column configuration option is specified as <A 
href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A>, 
the state names are <STRONG>normal</STRONG>, <STRONG>active</STRONG>, 
<STRONG>pressed</STRONG> or <STRONG>up</STRONG>, i.e. do not use item state 
names. 
<P>The following options are supported for columns: 
<DL>
  <DT><STRONG><STRONG>-arrow</STRONG></STRONG> <I class=arg>direction</I>
  <DD>Indicates whether or not an arrow should be drawn in the column header. <I 
  class=arg>Direction</I> must have one of the values <STRONG>none</STRONG> (the 
  default), <STRONG>up</STRONG>, or <STRONG>down</STRONG>. <BR><BR>
  <DT><STRONG><STRONG>-arrowbitmap</STRONG></STRONG> <I class=arg>bitmap</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option the bitmap to use to draw the arrow if this column's -arrow option is 
  not <STRONG>none</STRONG>. <BR><BR>
  <DT><STRONG><STRONG>-arrowimage</STRONG></STRONG> <I class=arg>image</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option the image to use to draw the arrow if this column's -arrow option is 
  not <STRONG>none</STRONG>. If an image is specified for a certain state, it 
  overrides the -arrowbitmap option. <BR><BR>
  <DT><STRONG><STRONG>-arrowside</STRONG></STRONG> <I class=arg>side</I>
  <DD>Indicates on which side of the bitmap/image/text the arrow should be 
  drawn. <I class=arg>Side</I> must be either <STRONG>left</STRONG> or 
  <STRONG>right</STRONG> (the default). <BR><BR>
  <DT><STRONG><STRONG>-arrowgravity</STRONG></STRONG> <I class=arg>side</I>
  <DD>Indicates onto which side an arrow should be packed, if there is more 
  space available for drawing the arrow then needed. <I class=arg>Side</I> must 
  be either <STRONG>left</STRONG> (the default) or <STRONG>right</STRONG>. 
  <BR><BR>
  <DT><STRONG><STRONG>-arrowpadx</STRONG></STRONG> <I class=arg>amount</I>
  <DD><I class=arg>Amount</I> specifies how much padding to leave on the left 
  and right of the arrow. <I class=arg>Amount</I> may be a list of two values to 
  specify padding for left and right separately; it defaults to 6. <BR><BR>
  <DT><STRONG><STRONG>-arrowpady</STRONG></STRONG> <I class=arg>amount</I>
  <DD><I class=arg>Amount</I> specifies how much padding to leave on the top and 
  bottom of the arrow. <I class=arg>Amount</I> may be a list of two values to 
  specify padding for top and bottom separately; it defaults to 0. <BR><BR>
  <DT><STRONG><STRONG>-bitmap</STRONG></STRONG> <I class=arg>bitmap</I>
  <DD>Specifies the bitmap to display in the element to the left of the column 
  title. <BR><BR>
  <DT><STRONG><STRONG>-background</STRONG></STRONG> <I class=arg>color</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option the color to use for the background of the column header. <BR><BR>
  <DT><STRONG><STRONG>-borderwidth</STRONG></STRONG> <I class=arg>size</I>
  <DD>Specifies a non-negative value indicating the width of the 3-D border to 
  draw around the outside of the column header (if such a border is being drawn; 
  the <STRONG>-relief</STRONG> column option determines this). The value may 
  have any of the forms acceptable to <STRONG>Tk_GetPixels</STRONG>. <BR><BR>
  <DT><STRONG><STRONG>-button</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Indicates whether or not a mouse click on the column header should change 
  the sorting order of the tree. <BR><BR>
  <DT><STRONG><STRONG>-expand</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Indicates whether or not any extra horizontal space should be distributed 
  to this column. This option has no effect if the <STRONG>-width</STRONG> 
  option is set. <BR><BR>
  <DT><STRONG><STRONG>-font</STRONG></STRONG> <I class=arg>fontName</I>
  <DD>Specifies the font to use for the column title inside the column header. 
  <BR><BR>
  <DT><STRONG><STRONG>-image</STRONG></STRONG> <I class=arg>image</I>
  <DD>Specifies the image to display in the element to the left of the column 
  title. This option overrides the <STRONG>-bitmap</STRONG> column option. 
  <BR><BR>
  <DT><STRONG><STRONG>-imagepadx</STRONG></STRONG> <I class=arg>amount</I>
  <DD><I class=arg>Amount</I> specifies how much padding to leave on the left 
  and right of the image (or bitmap). <I class=arg>Amount</I> may be a list of 
  two values to specify padding for left and right separately; it defaults to 6. 
  <BR><BR>
  <DT><STRONG><STRONG>-imagepady</STRONG></STRONG> <I class=arg>amount</I>
  <DD><I class=arg>Amount</I> specifies how much padding to leave on the top and 
  bottom of the image (or bitmap). <I class=arg>Amount</I> may be a list of two 
  values to specify padding for top and bottom separately; it defaults to 0. 
  <BR><BR>
  <DT><STRONG><STRONG>-itembackground</STRONG></STRONG> <I 
  class=arg>colorList</I>
  <DD>Specifies a list of zero or more colors, which are used as alternating 
  background colors for items in this column. See also the 
  <STRONG>-backgroundmode</STRONG> widget option for more on this. <BR><BR>
  <DT><STRONG><STRONG>-justify</STRONG></STRONG> <I class=arg>justification</I>
  <DD>This option determines how the items (and the title) line up with each 
  other. Must be one of <STRONG>left</STRONG> (the default), 
  <STRONG>center</STRONG>, or <STRONG>right</STRONG>. <BR><BR>
  <DT><STRONG><STRONG>-maxwidth</STRONG></STRONG> <I class=arg>size</I>
  <DD>Specifies the maximum size, in screen units, that will be permitted for 
  this column. If <I class=arg>size</I> is an empty string, then there is no 
  limit on the maximum size of the column. This option has no effect if the 
  <STRONG>-width</STRONG> option is set. <BR><BR>
  <DT><STRONG><STRONG>-minwidth</STRONG></STRONG> <I class=arg>size</I>
  <DD>Specifies the minimum size, in screen units, that will be permitted for 
  this column. If <I class=arg>size</I> is an empty string, then the minimum 
  size of the column is zero. This option has no effect if the 
  <STRONG>-width</STRONG> option is set. <BR><BR>
  <DT><STRONG><STRONG>-resize</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Specifies a boolean value that indicates whether the user should be 
  allowed to resize the column by dragging the right edge of the column's 
  header. Default is true. <BR><BR>
  <DT><STRONG><STRONG>-squeeze</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Specifies a boolean value that indicates whether or not the column should 
  shrink when the content width of the treectrl is less than the total needed 
  width of all visible columns. Defaults to false, which means the column will 
  not get smaller than its needed width. The column will not get smaller than 
  the value of its <STRONG>-minwidth</STRONG> option, if specified. This option 
  has no effect if the <STRONG>-width</STRONG> option is set. <BR><BR>
  <DT><STRONG><STRONG>-state</STRONG></STRONG> <I class=arg>state</I>
  <DD>Specifies one of three states for the column header: 
  <STRONG>normal</STRONG>, <STRONG>active</STRONG>, or <STRONG>pressed</STRONG>. 
  The active state is used when the mouse is over the header. The pressed state 
  is used when the mouse button is pressed in the header. <BR><BR>
  <DT><STRONG><STRONG>-stepwidth</STRONG></STRONG> <I class=arg>size</I>
  <DD>Deprecated. Use the treectrl's <STRONG>-itemwidthmultiple</STRONG> option 
  instead. <BR><BR>
  <DT><STRONG><STRONG>-tag</STRONG></STRONG> <I class=arg>tag</I>
  <DD>Defines a unique name for the column which can be used whenever a column 
  must be specified. <BR><BR>
  <DT><STRONG><STRONG>-text</STRONG></STRONG> <I class=arg>text</I>
  <DD>Specifies a text string to be displayed as the column title. <BR><BR>
  <DT><STRONG><STRONG>-textcolor</STRONG></STRONG> <I class=arg>color</I>
  <DD>Specifies a color, which should be used as foreground color to display the 
  column title. <BR><BR>
  <DT><STRONG><STRONG>-textlines</STRONG></STRONG> <I class=arg>count</I>
  <DD>Specifies the maximum number of lines of text to display in the column 
  title. If this value is zero, the number of lines displayed is determined by 
  any newline characters and the effects of wrapping when the column width is 
  less than needed. The default is 1. Note: Under OSX/Aqua this value is always 
  set to 1 when the treectrl's <STRONG>-usetheme</STRONG> option is true, 
  because the Appearance Manager uses a fixed height for the column header; 
  there is only room for a single line of text. <BR><BR>
  <DT><STRONG><STRONG>-textpadx</STRONG></STRONG> <I class=arg>amount</I>
  <DD><I class=arg>Amount</I> specifies how much padding to leave on the left 
  and right of the text. <I class=arg>Amount</I> may be a list of two values to 
  specify padding for left and right separately; it defaults to 6. <BR><BR>
  <DT><STRONG><STRONG>-textpady</STRONG></STRONG> <I class=arg>amount</I>
  <DD><I class=arg>Amount</I> specifies how much padding to leave on the top and 
  bottom of the text. <I class=arg>Amount</I> may be a list of two values to 
  specify padding for top and bottom separately; it defaults to 0. <BR><BR>
  <DT><STRONG><STRONG>-visible</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Indicates whether or not the column should be displayed. <BR><BR>
  <DT><STRONG><STRONG>-width</STRONG></STRONG> <I class=arg>size</I>
  <DD>Specifies a fixed width for the column. If this value is an empty string, 
  the column width is calculated as the maximum of: a) the width requested by 
  items; b) the width requested by the column's header; and c) the column's 
  <STRONG>-minwidth</STRONG> option. This calculated width is also affected by 
  the <STRONG>-expand</STRONG> option and the <STRONG>-squeeze</STRONG> option. 
  In any case, the calculated width will not be greater than the 
  <STRONG>-maxwidth</STRONG> option, if specified. <BR><BR>
  <DT><STRONG><STRONG>-widthhack</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Deprecated. Use the treectrl's <STRONG>-itemwidthequal</STRONG> option 
  instead. </DD></DL>
<H2><A name=column_description>COLUMN DESCRIPTION</A></H2>
<P>Many of the commands and options for a treectrl take as an argument a 
description of which column to operate on. See the <A 
href="http://tktreectrl.sourceforge.net/treectrl.html#examples">EXAMPLES</A> 
section for examples. The initial part of a column description must begin with 
one of the following terms: 
<DL>
  <DT><I class=arg>id</I>
  <DD>Specifies the unique column identifier, where <I class=arg>id</I> should 
  be the return value of a prior call of the <B class=cmd>column create</B> 
  widget command. See also the <STRONG>-columnprefix</STRONG> option. <BR><BR>
  <DT><I class=arg>tag</I>
  <DD>Specifies the value of a column's -tag option. <BR><BR>
  <DT><STRONG>all</STRONG>
  <DD>Indicates every column, including the tail column. Not all commands accept 
  this. <BR><BR>
  <DT><STRONG>first</STRONG> ?<STRONG>visible</STRONG>?
  <DD>Indicates the leftmost column of the treectrl. If <STRONG>visible</STRONG> 
  is specified, the leftmost column whose -visible option is true is used. 
  <BR><BR>
  <DT><STRONG>end</STRONG> ?<STRONG>visible</STRONG>?
  <DD>
  <DT><STRONG>last</STRONG> ?<STRONG>visible</STRONG>?
  <DD>Indicates the rightmost column of the treectrl (but not the tail column). 
  If <STRONG>visible</STRONG> is specified, the rightmost column whose -visible 
  option is true is used. <BR><BR>
  <DT><STRONG>order</STRONG> <I class=arg>n</I> ?<STRONG>visible</STRONG>?
  <DD>Indicates the <I class=arg>n</I>th column in the list of columns as 
  returned by the <B class=cmd>column order</B> command. <BR><BR>
  <DT><STRONG>tail</STRONG>
  <DD>Indicates the ever-present tail column of the treectrl. <BR><BR>
  <DT><STRONG>tree</STRONG>
  <DD>Indicates the column specified by the -treecolumn option of the treectrl. 
  </DD></DL>
<P>The initial part of the column description (matching any of the values above) 
may be followed by one or more <I class=arg>modifier</I>s. A modifier changes 
the column used relative to the description up to this point. It may be 
specified in any of the following forms: 
<DL>
  <DT><STRONG>next</STRONG> ?<STRONG>visible</STRONG>?
  <DD>Use the column to the right, or the column to the right whose -visible 
  option is true. <BR><BR>
  <DT><STRONG>prev</STRONG> ?<STRONG>visible</STRONG>?
  <DD>Use the column to the left, or the column to the left whose -visible 
  option is true. </DD></DL>
<H2><A name=states>STATES</A></H2>
<P>For every item a set of boolean states is managed. These states play an 
integral role in the appearance of each item. The following states are 
predefined for every item: 
<DL>
  <DT><STRONG>active</STRONG>
  <DD>At all times this state is set for exactly one item. The active item is 
  used with keyboard navigation. When the treectrl widget is created or when the 
  active item is deleted, the root item will become the active item. This state 
  can be modified by means of the widget command <B class=cmd>activate</B>. 
  <BR><BR>
  <DT><STRONG>enabled</STRONG>
  <DD>This state is set for every item, when it is created. It cannot be 
  modified. <BR><BR>
  <DT><STRONG>focus</STRONG>
  <DD>This state is set for every item, if the treectrl widget currently has the 
  focus. It cannot be modified by means of a widget command, but is maintained 
  in reaction to the &lt;FocusIn&gt; and &lt;FocusOut&gt; events. <BR><BR>
  <DT><STRONG>open</STRONG>
  <DD>If this state is switched on, the descendants of the item are displayed - 
  the item is expanded. If this state is switched off, the descendants of the 
  item are not displayed - the item is collapsed. For a new item this state is 
  switched on by default. This state can be modified by means of the widget 
  commands <B class=cmd>item expand</B>, <B class=cmd>item collapse</B>, or <B 
  class=cmd>item toggle</B>. <BR><BR>
  <DT><STRONG>selected</STRONG>
  <DD>This state is set for every item included in the selection. It can be 
  modified by means of the widget command <B class=cmd>selection</B>. </DD></DL>
<P>By means of the <B class=cmd>state define</B> widget command up to 27 
additional states can be defined. 
<H2><A name=per-state_options>PER-STATE OPTIONS</A></H2>
<P>The visual appearance of an item can change depending on the state the item 
is in, such as being the active item, being included in the selection, being 
collapsed, or some combination of those or other states. When a configuration 
option is described as <EM>per-state</EM>, it means the option describes a value 
which varies depending on the state of the item. If a per-state option is 
specified as a single value, the value is used for all states. Otherwise the 
per-state option must be specified as an even-numbered list. For example, to use 
the font "Times 12 bold" in a <STRONG>text</STRONG> element regardless of the 
item state you can write: 
<P>
<TABLE>
  <TBODY>
  <TR>
    <TD bgColor=black>&nbsp;</TD>
    <TD><PRE class=sample>$T element configure MyTextElement -font {{Times 12 bold}}
</PRE></TD></TR></TBODY></TABLE></P>However, to use a different font when the 
item is selected you could write: 
<P>
<TABLE>
  <TBODY>
  <TR>
    <TD bgColor=black>&nbsp;</TD>
    <TD><PRE class=sample>$T element configure MyTextElement -font {{Courier 10} selected {Times 12 bold} {}}
</PRE></TD></TR></TBODY></TABLE></P>In the example above, the -font option reads 
"value stateList value stateList". If <I class=arg>stateList</I> is an empty 
list, the preceding <I class=arg>value</I> is used regardless of the item state. 
A non-empty stateList specifies a list of states which must be set for the item 
in order to use the preceding value. Each stateList can also include state names 
preceded by a ! sign, indicating the state must *not* be set for the item. For 
example: 
<P>
<TABLE>
  <TBODY>
  <TR>
    <TD bgColor=black>&nbsp;</TD>
    <TD><PRE class=sample>$T element configure MyRectElement -fill {blue {selected focus} gray {selected !focus}}
</PRE></TD></TR></TBODY></TABLE></P>In the example above, the 
<STRONG>rect</STRONG> element is filled with blue when the treectrl has the 
focus and the item is selected. If the treectrl does not have the focus, the 
example specifies that gray should be used for selected items. Also note that if 
the item is not selected, no color is specified for the -fill option. 
<H2><A name=elements>ELEMENTS</A></H2>
<P>Elements are the smallest building blocks which are handled by a treectrl 
widget. One or more elements together can be combined to a style, which can be 
considered as a blueprint for an item. An element can be of type 
<STRONG>bitmap</STRONG>, <STRONG>border</STRONG>, <STRONG>image</STRONG>, 
<STRONG>rect</STRONG>, <STRONG>text</STRONG> or <STRONG>window</STRONG>. For 
each element type there is a section below describing the options which can 
modify an element of that type. 
<P>All of the element configuration options described below are unspecified by 
default, meaning that no value whatsoever has been given to the option. It may 
seem strange to you that a boolean option would be unspecified instead of simply 
"true" or "false". The reason for this is that when an element displayed by an 
item has no value specified for an option, the element refers to the master 
element created by the <B class=cmd>element create</B> command for a value for 
that option. This allows items which are displaying a certain element to be 
redisplayed when the master element's options change. The <B class=cmd>item 
element configure</B> command can be used to override the master element's 
configuration options for a specific item. 
<H2><A name=bitmap_element>BITMAP ELEMENT</A></H2>
<P>An element of type <STRONG>bitmap</STRONG> can be used to display a bitmap in 
an item. The following options are supported for bitmap elements: 
<DL>
  <DT><STRONG><STRONG>-background</STRONG></STRONG> <I class=arg>color</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option the color to use for each of the bitmap's '0' valued pixels. If the 
  value for a certain state is an empty string (the default), the bitmap is 
  drawn transparent. <BR><BR>
  <DT><STRONG><STRONG>-bitmap</STRONG></STRONG> <I class=arg>bitmap</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option the bitmap to display in the element. <BR><BR>
  <DT><STRONG><STRONG>-draw</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option whether to draw the element. If the value for a certain state is an 
  empty string (the default), it is treated as true and the element will be 
  drawn. <BR><BR>
  <DT><STRONG><STRONG>-foreground</STRONG></STRONG> <I class=arg>color</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option the color to use for each of the bitmap's '1' valued pixels. If the 
  value for a certain state is an empty string (the default), the bitmap's 
  foreground color is black. </DD></DL>
<H2><A name=border_element>BORDER ELEMENT</A></H2>
<P>An element of type <STRONG>border</STRONG> can be used to display a 3D border 
in an item. The following options are supported for border elements: 
<DL>
  <DT><STRONG><STRONG>-background</STRONG></STRONG> <I class=arg>color</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option the color to use for the background of the border. If the value for a 
  certain state is an empty string (the default), the element will not be drawn. 
  <BR><BR>
  <DT><STRONG><STRONG>-draw</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option whether to draw the element. If the value for a certain state is an 
  empty string (the default), it is treated as true and the element will be 
  drawn. <BR><BR>
  <DT><STRONG><STRONG>-filled</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Specifies whether the interior of the border should be filled with the 
  background color. If this option is unspecified (the default), it it treated 
  as false which means that only the edges of the border will be drawn. <BR><BR>
  <DT><STRONG><STRONG>-height</STRONG></STRONG> <I class=arg>size</I>
  <DD>Specifies the height of the border. If this value is unspecified (the 
  default), the border will be exactly as tall as its display area as determined 
  by the style layout options. <BR><BR>
  <DT><STRONG><STRONG>-relief</STRONG></STRONG> <I class=arg>relief</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option the relief of the border. If the value for a certain state is an empty 
  string (the default), it is treated as flat. For acceptable values see the 
  description of the <STRONG>-relief</STRONG> option in the <B 
  class=cmd>options</B> manual page. <BR><BR>
  <DT><STRONG><STRONG>-thickness</STRONG></STRONG> <I class=arg>thickness</I>
  <DD>Specifies the thickness of the edges of the border. <BR><BR>
  <DT><STRONG><STRONG>-width</STRONG></STRONG> <I class=arg>size</I>
  <DD>Specifies the width of the border. If this value is unspecified (the 
  default), the border will be exactly as wide as its display area as determined 
  by the style layout options. </DD></DL>
<H2><A name=image_element>IMAGE ELEMENT</A></H2>
<P>An element of type <STRONG>image</STRONG> can be used to display an image in 
an item. The following options are supported for image elements: 
<DL>
  <DT><STRONG><STRONG>-draw</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option whether to draw the element. If the value for a certain state is an 
  empty string (the default), it is treated as true and the element will be 
  drawn. <BR><BR>
  <DT><STRONG><STRONG>-height</STRONG></STRONG> <I class=arg>size</I>
  <DD>Specifies the requested height of the display area for this element. If 
  unspecified (the default), the element requests a height equal to the height 
  of the image, or zero if there is no image. <BR><BR>
  <DT><STRONG><STRONG>-image</STRONG></STRONG> <I class=arg>image</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option the image to display in the element. <BR><BR>
  <DT><STRONG><STRONG>-width</STRONG></STRONG> <I class=arg>size</I>
  <DD>Specifies the requested width of the display area for this element. If 
  unspecified (the default), the element requests a width equal to the width of 
  the image, or zero if there is no image. </DD></DL>
<H2><A name=rectangle_element>RECTANGLE ELEMENT</A></H2>
<P>An element of type <STRONG>rect</STRONG> can be used to display a rectangle 
in an item. The following options are supported for rectangle elements: 
<DL>
  <DT><STRONG><STRONG>-draw</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option whether to draw the element. If the value for a certain state is an 
  empty string (the default), it is treated as true and the element will be 
  drawn. <BR><BR>
  <DT><STRONG><STRONG>-fill</STRONG></STRONG> <I class=arg>color</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option the color to be used to fill the rectangle's area. If the color for a 
  certain state is an empty string (the default), then the rectangle will not be 
  filled (but the outline may still be drawn). <BR><BR>
  <DT><STRONG><STRONG>-height</STRONG></STRONG> <I class=arg>size</I>
  <DD>Specifies the height of the rectangle. If this value is unspecified (the 
  default), the rectangle will be exactly as tall as its display area as 
  determined by the style layout options. <BR><BR>
  <DT><STRONG><STRONG>-open</STRONG></STRONG> <I class=arg>open</I>
  <DD>This option may be used to get an incomplete drawing of the outline. <I 
  class=arg>Open</I> is a string that contains zero or more of the characters 
  <STRONG>n</STRONG>, <STRONG>s</STRONG>, <STRONG>e</STRONG> or 
  <STRONG>w</STRONG>. Each letter refers to a side (north, south, east, or west) 
  that the outline will not be drawn. The default is the empty string, which 
  causes the outline to be drawn completely. <BR><BR>
  <DT><STRONG><STRONG>-outline</STRONG></STRONG> <I class=arg>color</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option the color to be used to draw the outline of the rectangle. If the color 
  for a certain state is an empty string (the default), then no outline is drawn 
  for the rectangle. <BR><BR>
  <DT><STRONG><STRONG>-outlinewidth</STRONG></STRONG> <I 
  class=arg>outlineWidth</I>
  <DD>Specifies the width of the outline to be drawn around the rectangle's 
  region. <I class=arg>outlineWidth</I> may be in any of the forms acceptable to 
  <STRONG>Tk_GetPixels</STRONG>. If this option is specified as an empty string 
  (the default), then no outline is drawn. <BR><BR>
  <DT><STRONG><STRONG>-showfocus</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Specifies a boolean value indicating whether a "focus ring" should be 
  drawn around the rectangle, if the item containing the rectangle is the active 
  item and the treectrl widget currently has the focus. If this option is 
  specified as an empty string (the default), then a focus rectangle is not 
  drawn. <BR><BR>
  <DT><STRONG><STRONG>-width</STRONG></STRONG> <I class=arg>size</I>
  <DD>Specifies the width of the rectangle. If this value is unspecified (the 
  default), the rectangle will be exactly as wide as its display area as 
  determined by the style layout options. </DD></DL>
<H2><A name=text_element>TEXT ELEMENT</A></H2>
<P>An element of type <STRONG>text</STRONG> can be used to display a text in an 
item. The following options are supported for text elements: 
<DL>
  <DT><STRONG><STRONG>-draw</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option whether to draw the element. If the value for a certain state is an 
  empty string (the default), it is treated as true and the element will be 
  drawn. <BR><BR>
  <DT><STRONG><STRONG>-data</STRONG></STRONG> <I class=arg>data</I>
  <DD>Specifies a value that together with the <STRONG>-datatype</STRONG> and 
  <STRONG>-format</STRONG> options will be displayed as text. <BR><BR>
  <DT><STRONG><STRONG>-datatype</STRONG></STRONG> <I class=arg>dataType</I>
  <DD>Specifies the type of information in the <STRONG>-data</STRONG> option. 
  Acceptable values are <STRONG>double</STRONG>, <STRONG>integer</STRONG>, 
  <STRONG>long</STRONG>, <STRONG>string</STRONG>, or <STRONG>time</STRONG>. 
  <BR><BR>
  <DT><STRONG><STRONG>-fill</STRONG></STRONG> <I class=arg>color</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option the foreground color to use when displaying the text. If the color for 
  a certain state is an empty string (the default), then the text will be 
  displayed using the color specified by the treectrl's 
  <STRONG>-foreground</STRONG> option. <BR><BR>
  <DT><STRONG><STRONG>-format</STRONG></STRONG> <I class=arg>formatString</I>
  <DD>This option specifies the format string used to display the value of the 
  <STRONG>-data</STRONG> option. If <STRONG>-datatype</STRONG> is 
  <STRONG>time</STRONG>, <I class=arg>formatString</I> should be a valid format 
  string for the Tcl <B class=cmd>clock</B> command. For all other 
  <STRONG>-datatype</STRONG> values <I class=arg>formatString</I> should be a 
  valid format string for the Tcl <B class=cmd>format</B> command. If this value 
  is unspecified the following defaults are used: for -datatype double "%g", for 
  -datatype integer "%d", for -datatype long "%ld", for -datatype string "%s", 
  and for -datatype time the default format string of the Tcl <B 
  class=cmd>clock</B> command. <BR><BR>
  <DT><STRONG><STRONG>-font</STRONG></STRONG> <I class=arg>font</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option the font to use when displaying the text. If the font for a certain 
  state is an empty string, the text is displayed using the font specified by 
  the treectrl's <STRONG>-font</STRONG> option. <BR><BR>
  <DT><STRONG><STRONG>-justify</STRONG></STRONG> <I class=arg>how</I>
  <DD>Specifies how to justify the text when multiple lines are displayed. <I 
  class=arg>How</I> must be one of the values <STRONG>left</STRONG>, 
  <STRONG>right</STRONG>, or <STRONG>center</STRONG>. If this option is 
  specified as an empty string (the default), <STRONG>left</STRONG> is used. 
  <BR><BR>
  <DT><STRONG><STRONG>-lines</STRONG></STRONG> <I class=arg>lineCount</I>
  <DD>Specifies the maximum number of lines to display. If more than <I 
  class=arg>lineCount</I> lines would be displayed, the last line will be 
  truncated with an ellipsis at the right. If this option is specified as zero 
  or an empty string (the default), there is no limit to the number of lines 
  displayed. <BR><BR>
  <DT><STRONG><STRONG>-text</STRONG></STRONG> <I class=arg>string</I>
  <DD><I class=arg>String</I> specifies a string to be displayed by the element. 
  <I class=arg>String</I> may contain newline characters in which case multiple 
  lines of text will be displayed. If this option is specified, the 
  <STRONG>-data</STRONG>, <STRONG>-datatype</STRONG>, <STRONG>-format</STRONG>, 
  and <STRONG>-textvariable</STRONG> options are ignored. <BR><BR>
  <DT><STRONG><STRONG>-textvariable</STRONG></STRONG> <I class=arg>varName</I>
  <DD>Specifies the name of a variable. The value of the variable is a string to 
  be displayed by the element; if the variable value changes then the element 
  will automatically update itself to display the new value. If this option is 
  specified, the <STRONG>-data</STRONG>, <STRONG>-datatype</STRONG>, and 
  <STRONG>-format</STRONG> options are ignored. <BR><BR>
  <DT><STRONG><STRONG>-width</STRONG></STRONG> <I class=arg>size</I>
  <DD>Specifies the maximum line length in any of the forms acceptable to 
  <STRONG>Tk_GetPixels</STRONG>. For text to wrap lines the value of the 
  <STRONG>-width</STRONG> option must be less than the needed width of the text, 
  or the display area for this element must be less than the needed width of the 
  text. For the display area to be less than the needed width of the text, one 
  of the style layout options <STRONG>-maxwidth</STRONG>, 
  <STRONG>-width</STRONG> or <STRONG>-squeeze</STRONG> must be used. <BR><BR>
  <DT><STRONG><STRONG>-wrap</STRONG></STRONG> <I class=arg>mode</I>
  <DD><I class=arg>Mode</I> specifies how to handle lines in the text that are 
  longer than the maximum line length. Acceptable values are 
  <STRONG>none</STRONG>, <STRONG>char</STRONG> or <STRONG>word</STRONG>. If this 
  option is unspecified (the default), <STRONG>word</STRONG> is used. See the 
  <STRONG>-width</STRONG> option for a description of how the maximum line 
  length is determined. </DD></DL>
<H2><A name=window_element>WINDOW ELEMENT</A></H2>
<P>An element of type <STRONG>window</STRONG> can be used to display a Tk window 
in an item. The following options are supported for window elements: 
<DL>
  <DT><STRONG><STRONG>-destroy</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Specifies whether the associated Tk window should be destroyed when the 
  element is deleted. The element is deleted when the item containing the 
  element is deleted, when the column containing the element is deleted, or when 
  the style assigned to the item's column is changed. If this option is 
  unspecified (the default), it is treated as false and the Tk window will not 
  be destroyed. <BR><BR>
  <DT><STRONG><STRONG>-draw</STRONG></STRONG> <I class=arg>boolean</I>
  <DD>Specifies as a <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#per-state_options">per-state</A> 
  option whether to draw the element. If the value for a certain state is an 
  empty string (the default), it is treated as true and the element will be 
  drawn. <BR><BR>
  <DT><STRONG><STRONG>-window</STRONG></STRONG> <I class=arg>pathName</I>
  <DD>Specifies the window to associate with this element. The window specified 
  by <I class=arg>pathName</I> must either be a child of the treectrl widget or 
  a child of some ancestor of the treectrl widget. <I class=arg>PathName</I> may 
  not refer to a top-level window. This option cannot be specified by the <B 
  class=cmd>element create</B> or <B class=cmd>element configure</B> commands, 
  only by the <B class=cmd>item element configure</B> command; i.e., the element 
  must be associated with a particular item. </DD></DL>
<H2><A name=item_description>ITEM DESCRIPTION</A></H2>
<P>Many of the commands and options for a treectrl take as an argument a 
description of which item to operate on. See the <A 
href="http://tktreectrl.sourceforge.net/treectrl.html#examples">EXAMPLES</A> 
section for examples. The initial part of an item description must begin with 
one of the following terms: 
<DL>
  <DT><I class=arg>id</I>
  <DD>Specifies the unique item identifier, where <I class=arg>id</I> should be 
  the return value of a prior call of the <B class=cmd>item create</B> widget 
  command, or <STRONG>0</STRONG> to specify the ever-present root item. See also 
  the <STRONG>-itemprefix</STRONG> option. <BR><BR>
  <DT><STRONG>active</STRONG>
  <DD>Indicates the item that is currently active, i.e. normally the item 
  specified as argument of the last successful <B class=cmd>activate</B> widget 
  command, or the root item if no such call happened yet. <BR><BR>
  <DT><STRONG>anchor</STRONG>
  <DD>Indicates the anchor item of the selection, i.e. normally the item 
  specified as argument of the last successful <B class=cmd>selection anchor</B> 
  widget command, or the root item if no such call happened yet. <BR><BR>
  <DT><STRONG>first</STRONG> ?<STRONG>visible</STRONG>?
  <DD>Indicates the first item of the treectrl, i.e. the root item. If 
  <STRONG>visible</STRONG> is specified and the widget is configured with 
  <STRONG>-showroot</STRONG> <STRONG>no</STRONG>, the first visible child of the 
  root node is specified instead. <BR><BR>
  <DT><STRONG>end</STRONG> ?<STRONG>visible</STRONG>?
  <DD>
  <DT><STRONG>last</STRONG> ?<STRONG>visible</STRONG>?
  <DD>Indicates the last item of the treectrl. If <STRONG>visible</STRONG> is 
  specified and the last item is currently not visible, i.e. one of its father 
  nodes is collapsed, the last visible item is specified instead. <BR><BR>
  <DT><STRONG>nearest</STRONG> <I class=arg>x y</I>
  <DD>Indicates the item nearest to the point given by <I class=arg>x</I> and <I 
  class=arg>y</I>. <BR><BR>
  <DT><STRONG>rnc</STRONG> <I class=arg>row column</I>
  <DD>Indicates the item in the given <I class=arg>row</I> and <I 
  class=arg>column</I>. The row and column corresponds to the on-screen 
  arrangement of items as determined by the -orient and -wrap options. You can 
  memorize <STRONG>rnc</STRONG> as abbreviation of "row 'n' column". <BR><BR>
  <DT><STRONG>root</STRONG>
  <DD>Indicates the root item of the treectrl. </DD></DL>
<P>The initial part of the item description (matching any of the values above) 
may be followed by one or more <I class=arg>modifier</I>s. A modifier changes 
the item used relative to the description up to this point. It may be specified 
in any of the following forms: 
<DL>
  <DT><STRONG>above</STRONG>
  <DD>Use the item one row above in this column. <BR><BR>
  <DT><STRONG>below</STRONG>
  <DD>Use the item one row below in this column. <BR><BR>
  <DT><STRONG>bottom</STRONG>
  <DD>Use the item in the last row of this column. <BR><BR>
  <DT><STRONG>child</STRONG> <I class=arg>n</I> ?<STRONG>visible</STRONG>?
  <DD>Use the <I class=arg>n</I>th child of the item. <BR><BR>
  <DT><STRONG>firstchild</STRONG> ?<STRONG>visible</STRONG>?
  <DD>Use the first child of the item. <BR><BR>
  <DT><STRONG>lastchild</STRONG> ?<STRONG>visible</STRONG>?
  <DD>Use the last child of the item. <BR><BR>
  <DT><STRONG>left</STRONG>
  <DD>Use the item one column to the left in the same row. <BR><BR>
  <DT><STRONG>leftmost</STRONG>
  <DD>Use the item of the first column in the same row. <BR><BR>
  <DT><STRONG>next</STRONG> ?<STRONG>visible</STRONG>?
  <DD>Use the next item, which is the first existant (or visible) item of the 
  following list: the first child, the next sibling or the next sibling of the 
  nearest parent which has one. <BR><BR>
  <DT><STRONG>nextsibling</STRONG> ?<STRONG>visible</STRONG>?
  <DD>Use the next sibling of the item. <BR><BR>
  <DT><STRONG>parent</STRONG>
  <DD>Use the parent of the item. <BR><BR>
  <DT><STRONG>prev</STRONG> ?<STRONG>visible</STRONG>?
  <DD>Use the last child of the previous sibling, or the parent if there is no 
  previos sibling. <BR><BR>
  <DT><STRONG>prevsibling</STRONG> ?<STRONG>visible</STRONG>?
  <DD>Use the previous sibling of the item. <BR><BR>
  <DT><STRONG>right</STRONG>
  <DD>Use the item one column to the right in the same row. <BR><BR>
  <DT><STRONG>rightmost</STRONG>
  <DD>Use the item of the last column in the same row. <BR><BR>
  <DT><STRONG>sibling</STRONG> <I class=arg>n</I> ?<STRONG>visible</STRONG>?
  <DD>Use the <I class=arg>n</I>th child of the item's parent. <BR><BR>
  <DT><STRONG>top</STRONG>
  <DD>Use the item in the first row of this column. </DD></DL>
<H2><A name=events_and_script_substitutions>EVENTS AND SCRIPT 
SUBSTITUTIONS</A></H2>
<P>The <I class=arg>script</I> argument to <B class=cmd>notify bind</B> is a Tcl 
script, which will be evaluated whenever the given event is generated. <I 
class=arg>Script</I> will be executed in the same interpreter that the <B 
class=cmd>notify bind</B> command was executed in, and it will run at global 
level (only global variables will be accessible). If <I class=arg>script</I> 
contains any <STRONG>%</STRONG> characters, then the script will not be 
evaluated directly. Instead, a new script will be generated by replacing each 
<STRONG>%</STRONG>, and the character following it, with information from the 
current event. Unlike the regular Tk <B class=cmd>bind</B> mechanism, each event 
generated by a treectrl widget has its own set of %-substitutions. 
<P>The following %-substitutions are valid for all static events: 
<DL>
  <DT><STRONG>%%</STRONG>
  <DD>Replaced with a single % <BR><BR>
  <DT><STRONG>%d</STRONG>
  <DD>The detail name <BR><BR>
  <DT><STRONG>%e</STRONG>
  <DD>The event name <BR><BR>
  <DT><STRONG>%P</STRONG>
  <DD>The pattern, either &lt;event&gt; or &lt;event-detail&gt; <BR><BR>
  <DT><STRONG>%W</STRONG>
  <DD>The object argument to the <B class=cmd>notify bind</B> command <BR><BR>
  <DT><STRONG>%T</STRONG>
  <DD>The treectrl widget which generated the event <BR><BR>
  <DT><STRONG>%?</STRONG>
  <DD>A list of the format {char value char value ...} for each %-substitution 
  character and the value it is replaced by </DD></DL>
<P>The following events may be generated by a treectrl widget: 
<DL>
  <DT><STRONG>&lt;ActiveItem&gt;</STRONG>
  <DD>Generated whenever the active item changes. <BR><BR>
  <DL>
    <DT><STRONG>%c</STRONG>
    <DD>The current active item <BR><BR>
    <DT><STRONG>%p</STRONG>
    <DD>The previous active item </DD></DL>
  <DT><STRONG>&lt;Collapse-before&gt;</STRONG>
  <DD>Generated before an item is collapsed. <BR><BR>
  <DL>
    <DT><STRONG>%I</STRONG>
    <DD>The item id </DD></DL>
  <DT><STRONG>&lt;Collapse-after&gt;</STRONG>
  <DD>Generated after an item is collapsed. <BR><BR>
  <DL>
    <DT><STRONG>%I</STRONG>
    <DD>The item id </DD></DL>
  <DT><STRONG>&lt;Expand-before&gt;</STRONG>
  <DD>Generated before an item is expanded. This event is useful if you want to 
  add child items to the item just before the item is expanded. <BR><BR>
  <DL>
    <DT><STRONG>%I</STRONG>
    <DD>The item id </DD></DL>
  <DT><STRONG>&lt;Expand-after&gt;</STRONG>
  <DD>Generated after an item is expanded. <BR><BR>
  <DL>
    <DT><STRONG>%I</STRONG>
    <DD>The item id </DD></DL>
  <DT><STRONG>&lt;ItemDelete&gt;</STRONG>
  <DD>Generated when items are about to be deleted by the <B class=cmd>item 
  delete</B> command. <BR><BR>
  <DL>
    <DT><STRONG>%i</STRONG>
    <DD>List of items ids being deleted. </DD></DL>
  <DT><STRONG>&lt;ItemVisibility&gt;</STRONG>
  <DD>Generated when items become visible on screen and when items are no longer 
  visible on screen. This event is useful if you have a very large number of 
  items and want to assign styles only when items are actually going to be 
  displayed. <BR><BR>
  <DL>
    <DT><STRONG>%h</STRONG>
    <DD>List of items ids which are no longer visible. <BR><BR>
    <DT><STRONG>%v</STRONG>
    <DD>List of items ids which are now visible. </DD></DL>
  <DT><STRONG>&lt;Scroll-x&gt;</STRONG>
  <DD>Generated whenever the view in the treectrl changes in such a way that a 
  horizontal scrollbar should be redisplayed. <BR><BR>
  <DL>
    <DT><STRONG>%l</STRONG>
    <DD>Same as the first fraction appended to <STRONG>-xscrollcommand</STRONG>. 
    Think <EM>lower</EM>. <BR><BR>
    <DT><STRONG>%u</STRONG>
    <DD>Same as the second fraction appended to 
    <STRONG>-xscrollcommand</STRONG>. Think <EM>upper</EM>. </DD></DL>
  <DT><STRONG>&lt;Scroll-y&gt;</STRONG>
  <DD>Generated whenever the view in the treectrl changes in such a way that a 
  vertical scrollbar should be redisplayed. <BR><BR>
  <DL>
    <DT><STRONG>%l</STRONG>
    <DD>Same as the first fraction appended to <STRONG>-yscrollcommand</STRONG>. 
    Think <EM>lower</EM>. <BR><BR>
    <DT><STRONG>%u</STRONG>
    <DD>Same as the second fraction appended to 
    <STRONG>-yscrollcommand</STRONG>. Think <EM>upper</EM>. </DD></DL>
  <DT><STRONG>&lt;Selection&gt;</STRONG>
  <DD>Generated whenever the selection changes. This event gives information 
  about how the selection changed. <BR><BR>
  <DL>
    <DT><STRONG>%c</STRONG>
    <DD>Same as the <B class=cmd>selection count</B> widget command <BR><BR>
    <DT><STRONG>%D</STRONG>
    <DD>List of newly-deselected item ids <BR><BR>
    <DT><STRONG>%S</STRONG>
    <DD>List of newly-selected item ids </DD></DL></DD></DL>
<H2><A name=dynamic_events>DYNAMIC EVENTS</A></H2>
<P>In addition to the pre-defined static events such as &lt;ActiveItem&gt; and 
&lt;Selection&gt;, new dynamic events can be created by using the <B 
class=cmd>notify install</B> command. 
<P>The following events may be generated by the library scripts: 
<DL>
  <DT><STRONG>&lt;ColumnDrag-begin&gt;</STRONG>
  <DD>
  <DT><STRONG>&lt;ColumnDrag-receive&gt;</STRONG>
  <DD>
  <DT><STRONG>&lt;ColumnDrag-end&gt;</STRONG>
  <DD>Generated whenever the user drag-and-drops a column header. The library 
  scripts do not actually move a dragged column. You must bind to the receive 
  event to move the column. See <A 
  href="http://tktreectrl.sourceforge.net/treectrl.html#examples">EXAMPLES</A>. 
  <BR><BR>
  <DL>
    <DT><STRONG>%C</STRONG>
    <DD>The column that was dragged <BR><BR>
    <DT><STRONG>%b</STRONG>
    <DD>The column to move the dragged column before </DD></DL>
  <DT><STRONG>&lt;Drag-begin&gt;</STRONG>
  <DD>
  <DT><STRONG>&lt;Drag-receive&gt;</STRONG>
  <DD>
  <DT><STRONG>&lt;Drag-end&gt;</STRONG>
  <DD>Generated whenever the user drag-and-drops a file into a directory. This 
  event is generated by the filelist-bindings.tcl library code, which is not 
  used by default. See the "Explorer" demos. <BR><BR>
  <DL>
    <DT><STRONG>%I</STRONG>
    <DD>The item that the user dropped the dragged items on. <BR><BR>
    <DT><STRONG>%l</STRONG>
    <DD>(lowercase L) The list of dragged items. </DD></DL>
  <DT><STRONG>&lt;Edit-begin&gt;</STRONG>
  <DD>
  <DT><STRONG>&lt;Edit-accept&gt;</STRONG>
  <DD>
  <DT><STRONG>&lt;Edit-end&gt;</STRONG>
  <DD>The filelist-bindings.tcl code will display a text-editing window if the 
  user clicks on a selected file/folder name. See the "Explorer" demos. <BR><BR>
  <DL>
    <DT><STRONG>%I</STRONG>
    <DD>The item containing the edited text element <BR><BR>
    <DT><STRONG>%C</STRONG>
    <DD>The column containing the edited text element <BR><BR>
    <DT><STRONG>%E</STRONG>
    <DD>The name of the edited text element <BR><BR>
    <DT><STRONG>%t</STRONG>
    <DD>The edited text </DD></DL>
  <DT><STRONG>&lt;Header-invoke&gt;</STRONG>
  <DD>Generated whenever the user clicks and releases the left mouse button in a 
  column header if the column's -button option is true. You can bind a script to 
  this event to sort the list. <BR><BR>
  <DL>
    <DT><STRONG>%C</STRONG>
    <DD>The column whose header was clicked </DD></DL></DD></DL>The library scripts 
provide an example of using a dynamic event called &lt;Header-invoke&gt;, which 
is generated when the mouse button is released over a column header. 
<P>
<TABLE>
  <TBODY>
  <TR>
    <TD bgColor=black>&nbsp;</TD>
    <TD><PRE class=sample>treectrl .t
.t notify install &lt;Header-invoke&gt;
.t notify bind ConsoleTag &lt;Header-invoke&gt; {
	puts "header %C clicked in treectrl %T"
}
proc ::TreeCtrl::Release1 {w x y} {
	...
	$w notify generate &lt;Header-invoke&gt; [list C $Priv(column)] \
		[list ::TreeCtrl::PercentsCmd $w]
	...
}
</PRE></TD></TR></TBODY></TABLE></P>In the example a new treectrl widget is 
created and the &lt;Header-invoke&gt; event is installed. For convenience there 
is no <I class=arg>percentsCommand</I> argument to <B class=cmd>notify 
install</B>; instead the call to <B class=cmd>notify generate</B> specifies the 
%-substitution command. A script is bound to the event with <B class=cmd>notify 
bind</B> which will print out the column number and widget name to the console 
(in the demos, &lt;Header-invoke&gt; is used to sort the list based on the 
column that was clicked). The <I class=arg>charMap</I> argument to <B 
class=cmd>notify generate</B> provides a list of %-substitution characters and 
values which is used by ::TreeCtrl::PercentsCmd. In this example any %C in any 
script bound to the &lt;Header-invoke&gt; event will be replaced by the value of 
$Priv(column). 
<H2><A name=default_bindings>DEFAULT BINDINGS</A></H2>
<P>Tk automatically creates class bindings for treectrl widgets that give them 
the following default behavior. 
<OL>
  <LI>Clicking mouse button 1 over an item positions the active cursor on the 
  item, sets the input focus to this widget, and resets the selection of the 
  widget to this item, if it is not already in the selection. <BR><BR>
  <LI>Clicking mouse button 1 with the Control key down will reposition the 
  active cursor and add the item to the selection without ever removing any 
  items from the selection. <BR><BR>
  <LI>If the mouse is dragged out of the widget while button 1 is pressed, the 
  treectrl will automatically scroll to make more items visible (if there are 
  more items off-screen on the side where the mouse left the window). <BR><BR>
  <LI>The Left and Right keys move the active cursor one item to the left or 
  right; for an hierarchical tree with vertical orientation nothing will happen, 
  since it has no two items in the same row. The selection is set to include 
  only the active item. If Left or Right is typed with the Shift key down, then 
  the active cursor moves and the selection is extended to include the new item. 
  <BR><BR>
  <LI>The Up and Down keys move the active cursor one item up or down. The 
  selection is set to include only the active item. If Up or Down is typed with 
  the Shift key down, then the active cursor moves and the selection is extended 
  to include the new item. <BR><BR>
  <LI>The Next and Prior keys move the active cursor forward or backwards by one 
  screenful, without affecting the selection. <BR><BR>
  <LI>Control-Next and Control-Prior scroll the view right or left by one page 
  without moving the active cursor or affecting the selection. Control-Left and 
  Control-Right behave the same. <BR><BR>
  <LI>The Home and End keys scroll to the left or right end of the widget 
  without moving the active cursor or affecting the selection. <BR><BR>
  <LI>The Control-Home and Control-End keys scroll to the top or bottom of the 
  widget, they also activate and select the first or last item. If also the 
  Shift key is down, then the active cursor moves and the selection is extended 
  to include the new item. <BR><BR>
  <LI>The Space and Select keys set the selection to the active item. <BR><BR>
  <LI>Control-/ selects the entire contents of the widget. <BR><BR>
  <LI>Control-\\ clears any selection in the widget. <BR><BR>
  <LI>The + and - keys expand or collapse the active item, the Return key 
  toggles the active item. <BR><BR>
  <LI>The mousewheel scrolls the view of the widget four lines up or down 
  depending on the direction, the wheel was turned. The active cursor or the 
  selection is not affected. </LI></OL>
<H2><A name=examples>EXAMPLES</A></H2>
<P>Get the unique identifier for the leftmost visible column: 
<P>
<TABLE>
  <TBODY>
  <TR>
    <TD bgColor=black>&nbsp;</TD>
    <TD><PRE class=sample>set id [$T column index "first visible"]
</PRE></TD></TR></TBODY></TABLE></P>Delete the leftmost column: 
<P>
<TABLE>
  <TBODY>
  <TR>
    <TD bgColor=black>&nbsp;</TD>
    <TD><PRE class=sample>$T column delete "order 0"
</PRE></TD></TR></TBODY></TABLE></P>Take the visible column that is to the left 
of the last column, and move that column in front of the tail column: 
<P>
<TABLE>
  <TBODY>
  <TR>
    <TD bgColor=black>&nbsp;</TD>
    <TD><PRE class=sample>$T column move "last prev visible" tail
</PRE></TD></TR></TBODY></TABLE></P>Get the unique identifier for the first 
visible item: 
<P>
<TABLE>
  <TBODY>
  <TR>
    <TD bgColor=black>&nbsp;</TD>
    <TD><PRE class=sample>set id [$T item index "first visible"]
</PRE></TD></TR></TBODY></TABLE></P>Delete the parent of the item that is under 
the point x,y: 
<P>
<TABLE>
  <TBODY>
  <TR>
    <TD bgColor=black>&nbsp;</TD>
    <TD><PRE class=sample>$T item delete "nearest $x $y parent"
</PRE></TD></TR></TBODY></TABLE></P>Add the 10th child of the second child of 
the root item to the selection: 
<P>
<TABLE>
  <TBODY>
  <TR>
    <TD bgColor=black>&nbsp;</TD>
    <TD><PRE class=sample>$T selection add "root firstchild nextsibling child 10"
</PRE></TD></TR></TBODY></TABLE></P>Move a column that the user 
drag-and-dropped: 
<P>
<TABLE>
  <TBODY>
  <TR>
    <TD bgColor=black>&nbsp;</TD>
    <TD><PRE class=sample>$T column dragconfigure -enable yes
$T notify install &lt;ColumnDrag-receive&gt;
$T notify bind MyTag &lt;ColumnDrag-receive&gt; {
	%T column move %C %b
}
</PRE></TD></TR></TBODY></TABLE></P>
<H2><A name=see_also>SEE ALSO</A></H2>
<P>bind(n), bitmap(n), image(n), listbox(n), options(n) 
<H2><A name=keywords>KEYWORDS</A></H2>
<P>tree, widget </P></BODY></HTML>
